{
    "vertices": [
        {
            "content": {
                "id": "665",
                "label": "Channel.fromPath([checkIfExists:true], $projectDir/assets/multiqc_config.yml)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"fromPath\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"checkIfExists\"},\"valueExpression\":{\"ConstantExpression\":true}}}]},{\"GStringExpression\":{\"verbatimText\":\"$projectDir/assets/multiqc_config.yml\",\"strings\":[{\"ConstantExpression\":\"\"},{\"ConstantExpression\":\"/assets/multiqc_config.yml\"}],\"values\":[{\"VariableExpression\":\"projectDir\"}]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "666",
                "label": "params.multiqc_config",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"multiqc_config\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "667",
                "label": "params.multiqc_config",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "668",
                "label": "Channel.fromPath([checkIfExists:true], params.multiqc_config)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"fromPath\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"checkIfExists\"},\"valueExpression\":{\"ConstantExpression\":true}}}]},{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"multiqc_config\"}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "669",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "670",
                "label": "(params.multiqc_config) ? Channel.fromPath([checkIfExists:true], params.multiqc_config) : Channel.empty()",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "671",
                "label": "params.multiqc_methods_description",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"multiqc_methods_description\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "672",
                "label": "params.multiqc_methods_description",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "673",
                "label": "this.file([checkIfExists:true], params.multiqc_methods_description)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"file\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"checkIfExists\"},\"valueExpression\":{\"ConstantExpression\":true}}}]},{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"multiqc_methods_description\"}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "674",
                "label": "this.file([checkIfExists:true], $projectDir/assets/methods_description_template.yml)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"file\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"checkIfExists\"},\"valueExpression\":{\"ConstantExpression\":true}}}]},{\"GStringExpression\":{\"verbatimText\":\"$projectDir/assets/methods_description_template.yml\",\"strings\":[{\"ConstantExpression\":\"\"},{\"ConstantExpression\":\"/assets/methods_description_template.yml\"}],\"values\":[{\"VariableExpression\":\"projectDir\"}]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "675",
                "label": "(params.multiqc_methods_description) ? this.file([checkIfExists:true], params.multiqc_methods_description) : this.file([checkIfExists:true], $projectDir/assets/methods_description_template.yml)",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "676",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "677",
                "label": "Channel.fromPath($projectDir/docs/images/nf-core-funcscan_logo_flat_light.png)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"fromPath\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"GStringExpression\":{\"verbatimText\":\"$projectDir/docs/images/nf-core-funcscan_logo_flat_light.png\",\"strings\":[{\"ConstantExpression\":\"\"},{\"ConstantExpression\":\"/docs/images/nf-core-funcscan_logo_flat_light.png\"}],\"values\":[{\"VariableExpression\":\"projectDir\"}]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "678",
                "label": "Channel.fromSamplesheet(input)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"fromSamplesheet\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ConstantExpression\":\"input\"}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "679",
                "label": "branch",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"branch\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}},\"method\":\"toString\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"endsWith\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ConstantExpression\":\".gz\"}]}}}},\"labels\":[\"compressed\"]}},{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}},\"labels\":[\"uncompressed\"]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"compressed\"},\"operation\":\"=\",\"rightExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"res\"},\"property\":\"compressed\"}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"uncompressed\"},\"operation\":\"=\",\"rightExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"res\"},\"property\":\"uncompressed\"}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "compressed",
                    "uncompressed"
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "680",
                "label": "GUNZIP_FASTA_PREP",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"GUNZIP_FASTA_PREP\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"gunzip\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"GUNZIP_FASTA_PREP\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"GUNZIP_FASTA_PREP\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "gunzip",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/gunzip/main.nf",
                "unaliased": "GUNZIP"
            }
        },
        {
            "content": {
                "id": "681",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "682",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "683",
                "label": "BIOAWK",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"BIOAWK\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"output\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BIOAWK\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"longest\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BIOAWK\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BIOAWK\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "output",
                    "longest",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/bioawk/main.nf",
                "unaliased": "BIOAWK"
            }
        },
        {
            "content": {
                "id": "684",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "685",
                "label": "join",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"join\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "686",
                "label": "map",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"map\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"meta_new\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"meta\"},\"method\":\"clone\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}},{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"meta\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":\"longest_contig\"}}},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Integer\"},\"method\":\"parseInt\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"VariableExpression\":\"length\"}]}}}}}},\"labels\":[]}},{\"ExpressionStatement\":{\"expression\":{\"ListExpression\":[{\"VariableExpression\":\"meta\"},{\"VariableExpression\":\"fasta\"}]},\"labels\":[]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[\"meta\",\"fasta\",\"length\"]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "687",
                "label": "params.arg_skip_deeparg",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"arg_skip_deeparg\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "688",
                "label": "(params.run_arg_screening && params.arg_skip_deeparg)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"binaryOp\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"run_arg_screening\"}},{\"ConstantExpression\":\"&&\"},{\"ConstantExpression\":true}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "689",
                "label": "params.amp_skip_hmmsearch",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"amp_skip_hmmsearch\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "690",
                "label": "params.amp_skip_amplify",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"amp_skip_amplify\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "691",
                "label": "(params.amp_skip_hmmsearch || params.amp_skip_amplify)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"binaryOp\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"ConstantExpression\":\"||\"}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "692",
                "label": "params.amp_skip_ampir",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"amp_skip_ampir\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "693",
                "label": "((params.amp_skip_hmmsearch || params.amp_skip_amplify) || params.amp_skip_ampir)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"binaryOp\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"ConstantExpression\":\"||\"}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "694",
                "label": "(params.run_amp_screening && ((params.amp_skip_hmmsearch || params.amp_skip_amplify) || params.amp_skip_ampir))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"binaryOp\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"run_amp_screening\"}},{\"ConstantExpression\":\"&&\"},{\"ConstantExpression\":true}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "695",
                "label": "((params.run_arg_screening && params.arg_skip_deeparg) || (params.run_amp_screening && ((params.amp_skip_hmmsearch || params.amp_skip_amplify) || params.amp_skip_ampir)))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"binaryOp\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"ConstantExpression\":\"||\"}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "696",
                "label": "params.bgc_skip_hmmsearch",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bgc_skip_hmmsearch\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "697",
                "label": "params.bgc_skip_antismash",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bgc_skip_antismash\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "698",
                "label": "(params.bgc_skip_hmmsearch || params.bgc_skip_antismash)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"binaryOp\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"ConstantExpression\":\"||\"}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "699",
                "label": "(params.run_bgc_screening && (params.bgc_skip_hmmsearch || params.bgc_skip_antismash))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"binaryOp\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"run_bgc_screening\"}},{\"ConstantExpression\":\"&&\"},{\"ConstantExpression\":true}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "700",
                "label": "(((params.run_arg_screening && params.arg_skip_deeparg) || (params.run_amp_screening && ((params.amp_skip_hmmsearch || params.amp_skip_amplify) || params.amp_skip_ampir))) || (params.run_bgc_screening && (params.bgc_skip_hmmsearch || params.bgc_skip_antismash)))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"binaryOp\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"ConstantExpression\":\"||\"}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "701",
                "label": "(((params.run_arg_screening && params.arg_skip_deeparg) || (params.run_amp_screening && ((params.amp_skip_hmmsearch || params.amp_skip_amplify) || params.amp_skip_ampir))) || (params.run_bgc_screening && (params.bgc_skip_hmmsearch || params.bgc_skip_antismash)))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "702",
                "label": "(((params.run_arg_screening && params.arg_skip_deeparg) || (params.run_amp_screening && ((params.amp_skip_hmmsearch || params.amp_skip_amplify) || params.amp_skip_ampir))) || (params.run_bgc_screening && (params.bgc_skip_hmmsearch || params.bgc_skip_antismash)))",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "703",
                "label": "(params.annotation_tool == prodigal)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"annotation_tool\"}},\"operation\":\"==\",\"rightExpression\":{\"ConstantExpression\":\"prodigal\"}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "704",
                "label": "(params.annotation_tool == prodigal)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "705",
                "label": "(params.annotation_tool == prodigal)",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "706",
                "label": "PRODIGAL_GFF",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"PRODIGAL_GFF\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"ConstantExpression\":\"gff\"}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"gene_annotations\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"PRODIGAL_GFF\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"nucleotide_fasta\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"PRODIGAL_GFF\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"amino_acid_fasta\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"PRODIGAL_GFF\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"all_gene_annotations\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"PRODIGAL_GFF\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"PRODIGAL_GFF\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":4}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "gene_annotations",
                    "nucleotide_fasta",
                    "amino_acid_fasta",
                    "all_gene_annotations",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/prodigal/main.nf",
                "unaliased": "PRODIGAL"
            }
        },
        {
            "content": {
                "id": "707",
                "label": "GUNZIP_PRODIGAL_FAA",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"GUNZIP_PRODIGAL_FAA\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"gunzip\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"GUNZIP_PRODIGAL_FAA\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"GUNZIP_PRODIGAL_FAA\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "gunzip",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/gunzip/main.nf",
                "unaliased": "GUNZIP"
            }
        },
        {
            "content": {
                "id": "708",
                "label": "GUNZIP_PRODIGAL_FNA",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"GUNZIP_PRODIGAL_FNA\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"gunzip\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"GUNZIP_PRODIGAL_FNA\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"GUNZIP_PRODIGAL_FNA\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "gunzip",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/gunzip/main.nf",
                "unaliased": "GUNZIP"
            }
        },
        {
            "content": {
                "id": "709",
                "label": "GUNZIP_PRODIGAL_GFF",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"GUNZIP_PRODIGAL_GFF\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"gunzip\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"GUNZIP_PRODIGAL_GFF\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"GUNZIP_PRODIGAL_GFF\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "gunzip",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/gunzip/main.nf",
                "unaliased": "GUNZIP"
            }
        },
        {
            "content": {
                "id": "710",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "711",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "712",
                "label": "(params.save_annotations == true)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"save_annotations\"}},\"operation\":\"==\",\"rightExpression\":{\"ConstantExpression\":true}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "713",
                "label": "(params.save_annotations == true)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "714",
                "label": "(params.save_annotations == true)",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "715",
                "label": "PRODIGAL_GBK",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"PRODIGAL_GBK\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"ConstantExpression\":\"gbk\"}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"gene_annotations\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"PRODIGAL_GBK\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"nucleotide_fasta\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"PRODIGAL_GBK\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"amino_acid_fasta\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"PRODIGAL_GBK\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"all_gene_annotations\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"PRODIGAL_GBK\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"PRODIGAL_GBK\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":4}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "gene_annotations",
                    "nucleotide_fasta",
                    "amino_acid_fasta",
                    "all_gene_annotations",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/prodigal/main.nf",
                "unaliased": "PRODIGAL"
            }
        },
        {
            "content": {
                "id": "716",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "717",
                "label": "Merge ch_annotation_gbk",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "718",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "719",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "720",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "721",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "722",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "723",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "724",
                "label": "Merge ch_annotation_faa",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "725",
                "label": "Merge ch_annotation_gff",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "726",
                "label": "Merge ch_annotation_fna",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "727",
                "label": "Merge ch_annotation_gbk",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "728",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "729",
                "label": "params.run_amp_screening",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"run_amp_screening\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "730",
                "label": "params.run_amp_screening",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "731",
                "label": "filter",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"filter\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"IfStatement\":{\"booleanExpression\":{\"BooleanExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"file\"},\"method\":\"isEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}},\"ifBlock\":{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"log\"},\"method\":\"warn\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"GStringExpression\":{\"verbatimText\":\"Annotation of following sample produced produced an empty FAA file. AMP screening tools requiring this file will not be executed: $meta.id\",\"strings\":[{\"ConstantExpression\":\"Annotation of following sample produced produced an empty FAA file. AMP screening tools requiring this file will not be executed: \"},{\"ConstantExpression\":\"\"}],\"values\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"meta\"},\"property\":\"id\"}}]}}]}}}},\"labels\":[]}},\"elseBlock\":{\"EmptyStatement\":null},\"labels\":[]}},{\"ExpressionStatement\":{\"expression\":{\"NotExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"file\"},\"method\":\"isEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}},\"labels\":[]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[\"meta\",\"file\"]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "732",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "733",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "734",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "735",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "736",
                "label": "params.amp_skip_amplify",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"amp_skip_amplify\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "737",
                "label": "params.amp_skip_amplify",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "738",
                "label": "params.amp_skip_amplify",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "739",
                "label": "AMPLIFY_PREDICT",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"AMPLIFY_PREDICT\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"ListExpression\":[]}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"tsv\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"AMPLIFY_PREDICT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"AMPLIFY_PREDICT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "tsv",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/amplify/predict/main.nf",
                "unaliased": "AMPLIFY_PREDICT"
            }
        },
        {
            "content": {
                "id": "740",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "741",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "742",
                "label": "Merge ch_ampresults_for_ampcombi",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "743",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "744",
                "label": "params.amp_skip_macrel",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"amp_skip_macrel\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "745",
                "label": "params.amp_skip_macrel",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "746",
                "label": "params.amp_skip_macrel",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "747",
                "label": "MACREL_CONTIGS",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"MACREL_CONTIGS\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"smorfs\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"MACREL_CONTIGS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"all_orfs\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"MACREL_CONTIGS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"amp_prediction\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"MACREL_CONTIGS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"readme_file\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"MACREL_CONTIGS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"log_file\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"MACREL_CONTIGS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":4}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"MACREL_CONTIGS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":5}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "smorfs",
                    "all_orfs",
                    "amp_prediction",
                    "readme_file",
                    "log_file",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/macrel/contigs/main.nf",
                "unaliased": "MACREL_CONTIGS"
            }
        },
        {
            "content": {
                "id": "748",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "749",
                "label": "GUNZIP_MACREL_PRED",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"GUNZIP_MACREL_PRED\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"gunzip\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"GUNZIP_MACREL_PRED\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"GUNZIP_MACREL_PRED\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "gunzip",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/gunzip/main.nf",
                "unaliased": "GUNZIP"
            }
        },
        {
            "content": {
                "id": "750",
                "label": "GUNZIP_MACREL_ORFS",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"GUNZIP_MACREL_ORFS\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"gunzip\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"GUNZIP_MACREL_ORFS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"GUNZIP_MACREL_ORFS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "gunzip",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/gunzip/main.nf",
                "unaliased": "GUNZIP"
            }
        },
        {
            "content": {
                "id": "751",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "752",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "753",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "754",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "755",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "756",
                "label": "Merge ch_macrel_faa",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "757",
                "label": "Merge ch_ampresults_for_ampcombi",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "758",
                "label": "Merge ch_faa_for_ampcombi",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "759",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "760",
                "label": "params.amp_skip_ampir",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"amp_skip_ampir\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "761",
                "label": "params.amp_skip_ampir",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "762",
                "label": "params.amp_skip_ampir",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "763",
                "label": "AMPIR",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"AMPIR\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"amp_ampir_model\"}},{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"amp_ampir_minlength\"}},{\"ConstantExpression\":0.0}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"amps_faa\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"AMPIR\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"amps_tsv\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"AMPIR\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"AMPIR\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "amps_faa",
                    "amps_tsv",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/ampir/main.nf",
                "unaliased": "AMPIR"
            }
        },
        {
            "content": {
                "id": "764",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "765",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "766",
                "label": "Merge ch_ampresults_for_ampcombi",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "767",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "768",
                "label": "params.amp_skip_hmmsearch",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"amp_skip_hmmsearch\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "769",
                "label": "params.amp_skip_hmmsearch",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "770",
                "label": "params.amp_skip_hmmsearch",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "771",
                "label": "params.amp_hmmsearch_models",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"amp_hmmsearch_models\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "772",
                "label": "params.amp_hmmsearch_models",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "773",
                "label": "Channel.fromPath([checkIfExists:true], params.amp_hmmsearch_models)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"fromPath\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"checkIfExists\"},\"valueExpression\":{\"ConstantExpression\":true}}}]},{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"amp_hmmsearch_models\"}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "774",
                "label": "this.error([nf-core/funcscan] error: hmm model files not found for --amp_hmmsearch_models! Please check input.)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"error\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ConstantExpression\":\"[nf-core/funcscan] error: hmm model files not found for --amp_hmmsearch_models! Please check input.\"}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "775",
                "label": "map",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"map\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"meta\"},\"operation\":\"=\",\"rightExpression\":{\"MapExpression\":[]}}},\"labels\":[]}},{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"meta\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":\"id\"}}},\"operation\":\"=\",\"rightExpression\":{\"TernaryExpression\":{\"booleanExpression\":{\"BooleanExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"file\"},\"property\":\"extension\"}},\"operation\":\"==\",\"rightExpression\":{\"ConstantExpression\":\"gz\"}}}},\"trueExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"file\"},\"property\":\"name\"}},\"operation\":\"-\",\"rightExpression\":{\"ConstantExpression\":\".hmm.gz\"}}},\"falseExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"file\"},\"property\":\"name\"}},\"operation\":\"-\",\"rightExpression\":{\"ConstantExpression\":\".hmm\"}}}}}}},\"labels\":[]}},{\"ExpressionStatement\":{\"expression\":{\"ListExpression\":[{\"VariableExpression\":\"meta\"},{\"VariableExpression\":\"file\"}]},\"labels\":[]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[\"file\"]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "776",
                "label": "combine",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"combine\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "777",
                "label": "map",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"map\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"meta_new\"},\"operation\":\"=\",\"rightExpression\":{\"MapExpression\":[]}}},\"labels\":[]}},{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"meta_new\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":\"id\"}}},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"meta_faa\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":\"id\"}}}}},\"labels\":[]}},{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"meta_new\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":\"hmm_id\"}}},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"meta_hmm\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":\"id\"}}}}},\"labels\":[]}},{\"ExpressionStatement\":{\"expression\":{\"ListExpression\":[{\"VariableExpression\":\"meta_new\"},{\"VariableExpression\":\"hmm\"},{\"VariableExpression\":\"faa\"},{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"amp_hmmsearch_savealignments\"}},{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"amp_hmmsearch_savetargets\"}},{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"amp_hmmsearch_savedomains\"}}]},\"labels\":[]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[\"meta_faa\",\"faa\",\"meta_hmm\",\"hmm\"]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "778",
                "label": "AMP_HMMER_HMMSEARCH",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"AMP_HMMER_HMMSEARCH\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"output\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"AMP_HMMER_HMMSEARCH\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"alignments\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"AMP_HMMER_HMMSEARCH\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"target_summary\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"AMP_HMMER_HMMSEARCH\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"domain_summary\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"AMP_HMMER_HMMSEARCH\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"AMP_HMMER_HMMSEARCH\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":4}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "output",
                    "alignments",
                    "target_summary",
                    "domain_summary",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/hmmer/hmmsearch/main.nf",
                "unaliased": "HMMER_HMMSEARCH"
            }
        },
        {
            "content": {
                "id": "779",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "780",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "781",
                "label": "groupTuple",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"groupTuple\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "782",
                "label": "join",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"join\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "783",
                "label": "multiMap",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"multiMap\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ExpressionStatement\":{\"expression\":{\"ListExpression\":[{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}},{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}]},\"labels\":[\"input\"]}},{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}},\"labels\":[\"faa\"]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"input\"},\"operation\":\"=\",\"rightExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"res\"},\"property\":\"input\"}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"faa\"},\"operation\":\"=\",\"rightExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"res\"},\"property\":\"faa\"}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "input",
                    "faa"
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "784",
                "label": "params.amp_ampcombi_db",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"amp_ampcombi_db\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "785",
                "label": "params.amp_ampcombi_db",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "786",
                "label": "Channel.fromPath([checkIfExists:true], params.amp_ampcombi_db)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"fromPath\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"checkIfExists\"},\"valueExpression\":{\"ConstantExpression\":true}}}]},{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"amp_ampcombi_db\"}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "787",
                "label": "DRAMP_DOWNLOAD",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"DRAMP_DOWNLOAD\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"db\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"DRAMP_DOWNLOAD\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"DRAMP_DOWNLOAD\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "db",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/local/dramp_download.nf",
                "unaliased": "DRAMP_DOWNLOAD"
            }
        },
        {
            "content": {
                "id": "788",
                "label": "Merge ch_ampcombi_input_db",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "789",
                "label": "AMPCOMBI",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"AMPCOMBI\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"sample_dir\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"AMPCOMBI\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"txt\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"AMPCOMBI\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"csv\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"AMPCOMBI\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"faa\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"AMPCOMBI\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"summary_csv\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"AMPCOMBI\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":4}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"summary_html\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"AMPCOMBI\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":5}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"log\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"AMPCOMBI\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":6}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"results_db\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"AMPCOMBI\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":7}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"results_db_dmnd\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"AMPCOMBI\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":8}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"results_db_fasta\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"AMPCOMBI\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":9}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"results_db_tsv\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"AMPCOMBI\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":10}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"AMPCOMBI\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":11}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "sample_dir",
                    "txt",
                    "csv",
                    "faa",
                    "summary_csv",
                    "summary_html",
                    "log",
                    "results_db",
                    "results_db_dmnd",
                    "results_db_fasta",
                    "results_db_tsv",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/ampcombi/main.nf",
                "unaliased": "AMPCOMBI"
            }
        },
        {
            "content": {
                "id": "790",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "791",
                "label": "multiMap",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"multiMap\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ExpressionStatement\":{\"expression\":{\"ListExpression\":[{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}]},\"labels\":[\"input\"]}},{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}},\"labels\":[\"summary\"]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"input\"},\"operation\":\"=\",\"rightExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"res\"},\"property\":\"input\"}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"summary\"},\"operation\":\"=\",\"rightExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"res\"},\"property\":\"summary\"}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "input",
                    "summary"
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "792",
                "label": "Channel.of([id:ampcombi_complete_summary])",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"of\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"id\"},\"valueExpression\":{\"ConstantExpression\":\"ampcombi_complete_summary\"}}}]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "793",
                "label": "collectFile",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collectFile\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"name\"},\"valueExpression\":{\"ConstantExpression\":\"ampcombi_complete_summary.csv\"}}},{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"keepHeader\"},\"valueExpression\":{\"ConstantExpression\":true}}}]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "794",
                "label": "combine",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"combine\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "795",
                "label": "TABIX_BGZIP",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"TABIX_BGZIP\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"output\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"TABIX_BGZIP\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"gzi\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"TABIX_BGZIP\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"TABIX_BGZIP\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "output",
                    "gzi",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/tabix/bgzip/main.nf",
                "unaliased": "TABIX_BGZIP"
            }
        },
        {
            "content": {
                "id": "796",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "797",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "798",
                "label": "params.run_arg_screening",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"run_arg_screening\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "799",
                "label": "params.run_arg_screening",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "800",
                "label": "params.arg_skip_deeparg",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"arg_skip_deeparg\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "801",
                "label": "params.arg_skip_deeparg",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "802",
                "label": "[]",
                "type": "Literal",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"value\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ListExpression\":[]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "803",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "804",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "805",
                "label": "params.arg_skip_amrfinderplus",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"arg_skip_amrfinderplus\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "806",
                "label": "(params.arg_skip_amrfinderplus && params.arg_amrfinderplus_db)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"binaryOp\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"arg_amrfinderplus_db\"}},{\"ConstantExpression\":\"&&\"}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "807",
                "label": "(params.arg_skip_amrfinderplus && params.arg_amrfinderplus_db)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "808",
                "label": "(params.arg_skip_amrfinderplus && params.arg_amrfinderplus_db)",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "809",
                "label": "Channel.fromPath(params.arg_amrfinderplus_db)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"fromPath\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"arg_amrfinderplus_db\"}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "810",
                "label": "first",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"first\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "811",
                "label": "params.arg_skip_amrfinderplus",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"arg_skip_amrfinderplus\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "812",
                "label": "params.arg_skip_amrfinderplus",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "813",
                "label": "params.arg_skip_amrfinderplus",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "814",
                "label": "AMRFINDERPLUS_RUN",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"AMRFINDERPLUS_RUN\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"report\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"AMRFINDERPLUS_RUN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"mutation_report\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"AMRFINDERPLUS_RUN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"AMRFINDERPLUS_RUN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"tool_version\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"AMRFINDERPLUS_RUN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"db_version\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"AMRFINDERPLUS_RUN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":4}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "report",
                    "mutation_report",
                    "versions",
                    "tool_version",
                    "db_version"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/amrfinderplus/run/main.nf",
                "unaliased": "AMRFINDERPLUS_RUN"
            }
        },
        {
            "content": {
                "id": "815",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "816",
                "label": "HAMRONIZATION_AMRFINDERPLUS",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"HAMRONIZATION_AMRFINDERPLUS\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"ConstantExpression\":\"json\"},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"json\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"HAMRONIZATION_AMRFINDERPLUS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"tsv\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"HAMRONIZATION_AMRFINDERPLUS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"HAMRONIZATION_AMRFINDERPLUS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "json",
                    "tsv",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/hamronization/amrfinderplus/main.nf",
                "unaliased": "HAMRONIZATION_AMRFINDERPLUS"
            }
        },
        {
            "content": {
                "id": "817",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "818",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "819",
                "label": "Merge ch_input_to_hamronization_summarize",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "820",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "821",
                "label": "params.arg_skip_fargene",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"arg_skip_fargene\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "822",
                "label": "params.arg_skip_fargene",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "823",
                "label": "params.arg_skip_fargene",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "824",
                "label": "Channel.fromList(params.arg_fargene_hmmmodel.tokenize(,))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"fromList\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"arg_fargene_hmmmodel\"}},\"method\":\"tokenize\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ConstantExpression\":\",\"}]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "825",
                "label": "combine",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"combine\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "826",
                "label": "map",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"map\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"meta_new\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"meta\"},\"method\":\"clone\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}},{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"meta_new\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":\"hmm_class\"}}},\"operation\":\"=\",\"rightExpression\":{\"VariableExpression\":\"hmm_class\"}}},\"labels\":[]}},{\"ExpressionStatement\":{\"expression\":{\"ListExpression\":[{\"VariableExpression\":\"meta_new\"},{\"VariableExpression\":\"contigs\"},{\"VariableExpression\":\"hmm_class\"}]},\"labels\":[]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[\"meta\",\"contigs\",\"hmm_class\"]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "827",
                "label": "multiMap",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"multiMap\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ExpressionStatement\":{\"expression\":{\"ListExpression\":[{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}},{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}]},\"labels\":[\"contigs\"]}},{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}},\"labels\":[\"hmmclass\"]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"contigs\"},\"operation\":\"=\",\"rightExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"res\"},\"property\":\"contigs\"}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"hmmclass\"},\"operation\":\"=\",\"rightExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"res\"},\"property\":\"hmmclass\"}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "contigs",
                    "hmmclass"
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "828",
                "label": "FARGENE",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"FARGENE\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"log\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"FARGENE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"txt\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"FARGENE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"hmm\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"FARGENE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"orfs\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"FARGENE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"orfs_amino\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"FARGENE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":4}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"contigs\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"FARGENE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":5}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"contigs_pept\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"FARGENE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":6}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"filtered\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"FARGENE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":7}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"filtered_pept\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"FARGENE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":8}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"fragments\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"FARGENE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":9}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"trimmed\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"FARGENE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":10}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"spades\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"FARGENE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":11}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"metagenome\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"FARGENE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":12}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"tmp\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"FARGENE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":13}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"FARGENE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":14}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "log",
                    "txt",
                    "hmm",
                    "orfs",
                    "orfs_amino",
                    "contigs",
                    "contigs_pept",
                    "filtered",
                    "filtered_pept",
                    "fragments",
                    "trimmed",
                    "spades",
                    "metagenome",
                    "tmp",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/fargene/main.nf",
                "unaliased": "FARGENE"
            }
        },
        {
            "content": {
                "id": "829",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "830",
                "label": "transpose",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"transpose\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "831",
                "label": "HAMRONIZATION_FARGENE",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"HAMRONIZATION_FARGENE\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"ConstantExpression\":\"json\"},{\"ConstantExpression\":\"0.1\"},{\"ConstantExpression\":\"0.1\"}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"json\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"HAMRONIZATION_FARGENE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"tsv\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"HAMRONIZATION_FARGENE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"HAMRONIZATION_FARGENE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "json",
                    "tsv",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/hamronization/fargene/main.nf",
                "unaliased": "HAMRONIZATION_FARGENE"
            }
        },
        {
            "content": {
                "id": "832",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "833",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "834",
                "label": "Merge ch_input_to_hamronization_summarize",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "835",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "836",
                "label": "params.arg_skip_rgi",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"arg_skip_rgi\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "837",
                "label": "params.arg_skip_rgi",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "838",
                "label": "params.arg_skip_rgi",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "839",
                "label": "RGI_MAIN",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"RGI_MAIN\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"json\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"RGI_MAIN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"tsv\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"RGI_MAIN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"tmp\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"RGI_MAIN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"tool_version\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"RGI_MAIN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"db_version\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"RGI_MAIN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":4}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"RGI_MAIN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":5}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "json",
                    "tsv",
                    "tmp",
                    "tool_version",
                    "db_version",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/rgi/main/main.nf",
                "unaliased": "RGI_MAIN"
            }
        },
        {
            "content": {
                "id": "840",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "841",
                "label": "HAMRONIZATION_RGI",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"HAMRONIZATION_RGI\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"ConstantExpression\":\"json\"},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"json\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"HAMRONIZATION_RGI\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"tsv\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"HAMRONIZATION_RGI\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"HAMRONIZATION_RGI\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "json",
                    "tsv",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/hamronization/rgi/main.nf",
                "unaliased": "HAMRONIZATION_RGI"
            }
        },
        {
            "content": {
                "id": "842",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "843",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "844",
                "label": "Merge ch_input_to_hamronization_summarize",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "845",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "846",
                "label": "params.arg_skip_deeparg",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"arg_skip_deeparg\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "847",
                "label": "(params.arg_skip_deeparg && params.arg_deeparg_data)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"binaryOp\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"arg_deeparg_data\"}},{\"ConstantExpression\":\"&&\"}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "848",
                "label": "(params.arg_skip_deeparg && params.arg_deeparg_data)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "849",
                "label": "(params.arg_skip_deeparg && params.arg_deeparg_data)",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "850",
                "label": "Channel.fromPath(params.arg_deeparg_data)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"fromPath\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"arg_deeparg_data\"}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "851",
                "label": "first",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"first\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "852",
                "label": "params.arg_skip_deeparg",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"arg_skip_deeparg\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "853",
                "label": "params.arg_skip_deeparg",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "854",
                "label": "params.arg_skip_deeparg",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "855",
                "label": "map",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"map\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"meta\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}},{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"anno\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}},{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"model\"},\"operation\":\"=\",\"rightExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"arg_deeparg_model\"}}}},\"labels\":[]}},{\"ExpressionStatement\":{\"expression\":{\"ListExpression\":[{\"VariableExpression\":\"meta\"},{\"VariableExpression\":\"anno\"},{\"VariableExpression\":\"model\"}]},\"labels\":[]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[\"it\"]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "856",
                "label": "DEEPARG_PREDICT",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"DEEPARG_PREDICT\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"daa\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"DEEPARG_PREDICT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"daa_tsv\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"DEEPARG_PREDICT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"arg\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"DEEPARG_PREDICT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"potential_arg\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"DEEPARG_PREDICT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"DEEPARG_PREDICT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":4}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "daa",
                    "daa_tsv",
                    "arg",
                    "potential_arg",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/deeparg/predict/main.nf",
                "unaliased": "DEEPARG_PREDICT"
            }
        },
        {
            "content": {
                "id": "857",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "858",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "859",
                "label": "HAMRONIZATION_DEEPARG",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"HAMRONIZATION_DEEPARG\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"ConstantExpression\":\"json\"},{\"ConstantExpression\":\"1.0.2\"},{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"arg_deeparg_data_version\"}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"json\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"HAMRONIZATION_DEEPARG\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"tsv\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"HAMRONIZATION_DEEPARG\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"HAMRONIZATION_DEEPARG\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "json",
                    "tsv",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/hamronization/deeparg/main.nf",
                "unaliased": "HAMRONIZATION_DEEPARG"
            }
        },
        {
            "content": {
                "id": "860",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "861",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "862",
                "label": "Merge ch_input_to_hamronization_summarize",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "863",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "864",
                "label": "params.arg_skip_abricate",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"arg_skip_abricate\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "865",
                "label": "params.arg_skip_abricate",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "866",
                "label": "params.arg_skip_abricate",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "867",
                "label": "ABRICATE_RUN",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"ABRICATE_RUN\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"report\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"ABRICATE_RUN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"ABRICATE_RUN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "report",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/abricate/run/main.nf",
                "unaliased": "ABRICATE_RUN"
            }
        },
        {
            "content": {
                "id": "868",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "869",
                "label": "HAMRONIZATION_ABRICATE",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"HAMRONIZATION_ABRICATE\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"ConstantExpression\":\"json\"},{\"ConstantExpression\":\"1.0.1\"},{\"ConstantExpression\":\"2021-Mar-27\"}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"json\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"HAMRONIZATION_ABRICATE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"tsv\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"HAMRONIZATION_ABRICATE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"HAMRONIZATION_ABRICATE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "json",
                    "tsv",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/hamronization/abricate/main.nf",
                "unaliased": "HAMRONIZATION_ABRICATE"
            }
        },
        {
            "content": {
                "id": "870",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "871",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "872",
                "label": "Merge ch_input_to_hamronization_summarize",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "873",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "874",
                "label": "map",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"map\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}},\"labels\":[]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "875",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "876",
                "label": "HAMRONIZATION_SUMMARIZE",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"HAMRONIZATION_SUMMARIZE\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"arg_hamronization_summarizeformat\"}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"json\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"HAMRONIZATION_SUMMARIZE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"tsv\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"HAMRONIZATION_SUMMARIZE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"html\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"HAMRONIZATION_SUMMARIZE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"HAMRONIZATION_SUMMARIZE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "json",
                    "tsv",
                    "html",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/hamronization/summarize/main.nf",
                "unaliased": "HAMRONIZATION_SUMMARIZE"
            }
        },
        {
            "content": {
                "id": "877",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "878",
                "label": "filter",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"filter\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"IfStatement\":{\"booleanExpression\":{\"BooleanExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"file\"},\"method\":\"isEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}},\"ifBlock\":{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"log\"},\"method\":\"warn\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"GStringExpression\":{\"verbatimText\":\"Annotation of following sample produced produced an empty FAA file. AMP screening tools requiring this file will not be executed: $meta.id\",\"strings\":[{\"ConstantExpression\":\"Annotation of following sample produced produced an empty FAA file. AMP screening tools requiring this file will not be executed: \"},{\"ConstantExpression\":\"\"}],\"values\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"meta\"},\"property\":\"id\"}}]}}]}}}},\"labels\":[]}},\"elseBlock\":{\"EmptyStatement\":null},\"labels\":[]}},{\"ExpressionStatement\":{\"expression\":{\"NotExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"file\"},\"method\":\"isEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}},\"labels\":[]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[\"meta\",\"file\"]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "879",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "880",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "881",
                "label": "params.arg_skip_amrfinderplus",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"arg_skip_amrfinderplus\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "882",
                "label": "(params.arg_skip_amrfinderplus && params.arg_amrfinderplus_db)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"binaryOp\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"arg_amrfinderplus_db\"}},{\"ConstantExpression\":\"&&\"}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "883",
                "label": "(params.arg_skip_amrfinderplus && params.arg_amrfinderplus_db)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "884",
                "label": "(params.arg_skip_amrfinderplus && params.arg_amrfinderplus_db)",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "885",
                "label": "Channel.fromPath(params.arg_amrfinderplus_db)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"fromPath\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"arg_amrfinderplus_db\"}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "886",
                "label": "first",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"first\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "887",
                "label": "params.arg_skip_amrfinderplus",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"arg_skip_amrfinderplus\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "888",
                "label": "params.arg_skip_amrfinderplus",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "889",
                "label": "params.arg_skip_amrfinderplus",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "890",
                "label": "AMRFINDERPLUS_RUN",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"AMRFINDERPLUS_RUN\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"report\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"AMRFINDERPLUS_RUN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"mutation_report\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"AMRFINDERPLUS_RUN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"AMRFINDERPLUS_RUN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"tool_version\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"AMRFINDERPLUS_RUN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"db_version\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"AMRFINDERPLUS_RUN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":4}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "report",
                    "mutation_report",
                    "versions",
                    "tool_version",
                    "db_version"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/amrfinderplus/run/main.nf",
                "unaliased": "AMRFINDERPLUS_RUN"
            }
        },
        {
            "content": {
                "id": "891",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "892",
                "label": "HAMRONIZATION_AMRFINDERPLUS",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"HAMRONIZATION_AMRFINDERPLUS\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"ConstantExpression\":\"json\"},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"json\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"HAMRONIZATION_AMRFINDERPLUS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"tsv\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"HAMRONIZATION_AMRFINDERPLUS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"HAMRONIZATION_AMRFINDERPLUS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "json",
                    "tsv",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/hamronization/amrfinderplus/main.nf",
                "unaliased": "HAMRONIZATION_AMRFINDERPLUS"
            }
        },
        {
            "content": {
                "id": "893",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "894",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "895",
                "label": "Merge ch_input_to_hamronization_summarize",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "896",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "897",
                "label": "params.arg_skip_fargene",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"arg_skip_fargene\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "898",
                "label": "params.arg_skip_fargene",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "899",
                "label": "params.arg_skip_fargene",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "900",
                "label": "Channel.fromList(params.arg_fargene_hmmmodel.tokenize(,))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"fromList\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"arg_fargene_hmmmodel\"}},\"method\":\"tokenize\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ConstantExpression\":\",\"}]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "901",
                "label": "combine",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"combine\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "902",
                "label": "map",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"map\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"meta_new\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"meta\"},\"method\":\"clone\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}},{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"meta_new\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":\"hmm_class\"}}},\"operation\":\"=\",\"rightExpression\":{\"VariableExpression\":\"hmm_class\"}}},\"labels\":[]}},{\"ExpressionStatement\":{\"expression\":{\"ListExpression\":[{\"VariableExpression\":\"meta_new\"},{\"VariableExpression\":\"contigs\"},{\"VariableExpression\":\"hmm_class\"}]},\"labels\":[]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[\"meta\",\"contigs\",\"hmm_class\"]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "903",
                "label": "multiMap",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"multiMap\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ExpressionStatement\":{\"expression\":{\"ListExpression\":[{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}},{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}]},\"labels\":[\"contigs\"]}},{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}},\"labels\":[\"hmmclass\"]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"contigs\"},\"operation\":\"=\",\"rightExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"res\"},\"property\":\"contigs\"}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"hmmclass\"},\"operation\":\"=\",\"rightExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"res\"},\"property\":\"hmmclass\"}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "contigs",
                    "hmmclass"
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "904",
                "label": "FARGENE",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"FARGENE\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"log\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"FARGENE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"txt\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"FARGENE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"hmm\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"FARGENE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"orfs\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"FARGENE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"orfs_amino\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"FARGENE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":4}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"contigs\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"FARGENE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":5}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"contigs_pept\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"FARGENE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":6}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"filtered\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"FARGENE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":7}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"filtered_pept\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"FARGENE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":8}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"fragments\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"FARGENE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":9}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"trimmed\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"FARGENE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":10}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"spades\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"FARGENE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":11}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"metagenome\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"FARGENE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":12}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"tmp\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"FARGENE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":13}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"FARGENE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":14}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "log",
                    "txt",
                    "hmm",
                    "orfs",
                    "orfs_amino",
                    "contigs",
                    "contigs_pept",
                    "filtered",
                    "filtered_pept",
                    "fragments",
                    "trimmed",
                    "spades",
                    "metagenome",
                    "tmp",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/fargene/main.nf",
                "unaliased": "FARGENE"
            }
        },
        {
            "content": {
                "id": "905",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "906",
                "label": "transpose",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"transpose\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "907",
                "label": "HAMRONIZATION_FARGENE",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"HAMRONIZATION_FARGENE\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"ConstantExpression\":\"json\"},{\"ConstantExpression\":\"0.1\"},{\"ConstantExpression\":\"0.1\"}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"json\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"HAMRONIZATION_FARGENE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"tsv\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"HAMRONIZATION_FARGENE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"HAMRONIZATION_FARGENE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "json",
                    "tsv",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/hamronization/fargene/main.nf",
                "unaliased": "HAMRONIZATION_FARGENE"
            }
        },
        {
            "content": {
                "id": "908",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "909",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "910",
                "label": "Merge ch_input_to_hamronization_summarize",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "911",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "912",
                "label": "params.arg_skip_rgi",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"arg_skip_rgi\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "913",
                "label": "params.arg_skip_rgi",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "914",
                "label": "params.arg_skip_rgi",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "915",
                "label": "RGI_MAIN",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"RGI_MAIN\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"json\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"RGI_MAIN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"tsv\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"RGI_MAIN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"tmp\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"RGI_MAIN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"tool_version\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"RGI_MAIN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"db_version\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"RGI_MAIN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":4}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"RGI_MAIN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":5}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "json",
                    "tsv",
                    "tmp",
                    "tool_version",
                    "db_version",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/rgi/main/main.nf",
                "unaliased": "RGI_MAIN"
            }
        },
        {
            "content": {
                "id": "916",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "917",
                "label": "HAMRONIZATION_RGI",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"HAMRONIZATION_RGI\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"ConstantExpression\":\"json\"},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"json\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"HAMRONIZATION_RGI\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"tsv\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"HAMRONIZATION_RGI\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"HAMRONIZATION_RGI\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "json",
                    "tsv",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/hamronization/rgi/main.nf",
                "unaliased": "HAMRONIZATION_RGI"
            }
        },
        {
            "content": {
                "id": "918",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "919",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "920",
                "label": "Merge ch_input_to_hamronization_summarize",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "921",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "922",
                "label": "params.arg_skip_deeparg",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"arg_skip_deeparg\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "923",
                "label": "(params.arg_skip_deeparg && params.arg_deeparg_data)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"binaryOp\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"arg_deeparg_data\"}},{\"ConstantExpression\":\"&&\"}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "924",
                "label": "(params.arg_skip_deeparg && params.arg_deeparg_data)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "925",
                "label": "(params.arg_skip_deeparg && params.arg_deeparg_data)",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "926",
                "label": "Channel.fromPath(params.arg_deeparg_data)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"fromPath\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"arg_deeparg_data\"}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "927",
                "label": "first",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"first\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "928",
                "label": "params.arg_skip_deeparg",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"arg_skip_deeparg\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "929",
                "label": "params.arg_skip_deeparg",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "930",
                "label": "params.arg_skip_deeparg",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "931",
                "label": "map",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"map\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"meta\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}},{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"anno\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}},{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"model\"},\"operation\":\"=\",\"rightExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"arg_deeparg_model\"}}}},\"labels\":[]}},{\"ExpressionStatement\":{\"expression\":{\"ListExpression\":[{\"VariableExpression\":\"meta\"},{\"VariableExpression\":\"anno\"},{\"VariableExpression\":\"model\"}]},\"labels\":[]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[\"it\"]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "932",
                "label": "DEEPARG_PREDICT",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"DEEPARG_PREDICT\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"daa\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"DEEPARG_PREDICT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"daa_tsv\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"DEEPARG_PREDICT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"arg\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"DEEPARG_PREDICT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"potential_arg\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"DEEPARG_PREDICT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"DEEPARG_PREDICT\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":4}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "daa",
                    "daa_tsv",
                    "arg",
                    "potential_arg",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/deeparg/predict/main.nf",
                "unaliased": "DEEPARG_PREDICT"
            }
        },
        {
            "content": {
                "id": "933",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "934",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "935",
                "label": "HAMRONIZATION_DEEPARG",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"HAMRONIZATION_DEEPARG\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"ConstantExpression\":\"json\"},{\"ConstantExpression\":\"1.0.2\"},{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"arg_deeparg_data_version\"}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"json\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"HAMRONIZATION_DEEPARG\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"tsv\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"HAMRONIZATION_DEEPARG\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"HAMRONIZATION_DEEPARG\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "json",
                    "tsv",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/hamronization/deeparg/main.nf",
                "unaliased": "HAMRONIZATION_DEEPARG"
            }
        },
        {
            "content": {
                "id": "936",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "937",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "938",
                "label": "Merge ch_input_to_hamronization_summarize",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "939",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "940",
                "label": "params.arg_skip_abricate",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"arg_skip_abricate\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "941",
                "label": "params.arg_skip_abricate",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "942",
                "label": "params.arg_skip_abricate",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "943",
                "label": "ABRICATE_RUN",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"ABRICATE_RUN\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"report\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"ABRICATE_RUN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"ABRICATE_RUN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "report",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/abricate/run/main.nf",
                "unaliased": "ABRICATE_RUN"
            }
        },
        {
            "content": {
                "id": "944",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "945",
                "label": "HAMRONIZATION_ABRICATE",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"HAMRONIZATION_ABRICATE\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"ConstantExpression\":\"json\"},{\"ConstantExpression\":\"1.0.1\"},{\"ConstantExpression\":\"2021-Mar-27\"}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"json\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"HAMRONIZATION_ABRICATE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"tsv\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"HAMRONIZATION_ABRICATE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"HAMRONIZATION_ABRICATE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "json",
                    "tsv",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/hamronization/abricate/main.nf",
                "unaliased": "HAMRONIZATION_ABRICATE"
            }
        },
        {
            "content": {
                "id": "946",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "947",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "948",
                "label": "Merge ch_input_to_hamronization_summarize",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "949",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "950",
                "label": "map",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"map\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}},\"labels\":[]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "951",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "952",
                "label": "HAMRONIZATION_SUMMARIZE",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"HAMRONIZATION_SUMMARIZE\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"arg_hamronization_summarizeformat\"}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"json\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"HAMRONIZATION_SUMMARIZE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"tsv\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"HAMRONIZATION_SUMMARIZE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"html\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"HAMRONIZATION_SUMMARIZE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"HAMRONIZATION_SUMMARIZE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "json",
                    "tsv",
                    "html",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/hamronization/summarize/main.nf",
                "unaliased": "HAMRONIZATION_SUMMARIZE"
            }
        },
        {
            "content": {
                "id": "953",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "954",
                "label": "Merge ARG",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "955",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "956",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "957",
                "label": "params.run_bgc_screening",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"run_bgc_screening\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "958",
                "label": "params.run_bgc_screening",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "959",
                "label": "filter",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"filter\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"IfStatement\":{\"booleanExpression\":{\"BooleanExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"file\"},\"method\":\"isEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}},\"ifBlock\":{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"log\"},\"method\":\"warn\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"GStringExpression\":{\"verbatimText\":\"Annotation of following sample produced produced an empty GFF file. AMP screening tools requiring this file will not be executed: $meta.id\",\"strings\":[{\"ConstantExpression\":\"Annotation of following sample produced produced an empty GFF file. AMP screening tools requiring this file will not be executed: \"},{\"ConstantExpression\":\"\"}],\"values\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"meta\"},\"property\":\"id\"}}]}}]}}}},\"labels\":[]}},\"elseBlock\":{\"EmptyStatement\":null},\"labels\":[]}},{\"ExpressionStatement\":{\"expression\":{\"NotExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"file\"},\"method\":\"isEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}},\"labels\":[]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[\"meta\",\"file\"]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "960",
                "label": "filter",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"filter\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"IfStatement\":{\"booleanExpression\":{\"BooleanExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"file\"},\"method\":\"isEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}},\"ifBlock\":{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"log\"},\"method\":\"warn\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"GStringExpression\":{\"verbatimText\":\"Annotation of following sample produced produced an empty FAA file. AMP screening tools requiring this file will not be executed: $meta.id\",\"strings\":[{\"ConstantExpression\":\"Annotation of following sample produced produced an empty FAA file. AMP screening tools requiring this file will not be executed: \"},{\"ConstantExpression\":\"\"}],\"values\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"meta\"},\"property\":\"id\"}}]}}]}}}},\"labels\":[]}},\"elseBlock\":{\"EmptyStatement\":null},\"labels\":[]}},{\"ExpressionStatement\":{\"expression\":{\"NotExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"file\"},\"method\":\"isEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}},\"labels\":[]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[\"meta\",\"file\"]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "961",
                "label": "filter",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"filter\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"IfStatement\":{\"booleanExpression\":{\"BooleanExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"file\"},\"method\":\"isEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}},\"ifBlock\":{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"log\"},\"method\":\"warn\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"GStringExpression\":{\"verbatimText\":\"Annotation of following sample produced produced an empty GBK file. AMP screening tools requiring this file will not be executed: $meta.id\",\"strings\":[{\"ConstantExpression\":\"Annotation of following sample produced produced an empty GBK file. AMP screening tools requiring this file will not be executed: \"},{\"ConstantExpression\":\"\"}],\"values\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"meta\"},\"property\":\"id\"}}]}}]}}}},\"labels\":[]}},\"elseBlock\":{\"EmptyStatement\":null},\"labels\":[]}},{\"ExpressionStatement\":{\"expression\":{\"NotExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"file\"},\"method\":\"isEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}},\"labels\":[]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[\"meta\",\"file\"]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "962",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "963",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "964",
                "label": "params.bgc_skip_antismash",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bgc_skip_antismash\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "965",
                "label": "params.bgc_skip_antismash",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "966",
                "label": "params.bgc_skip_antismash",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "967",
                "label": "(params.bgc_antismash_databases && params.bgc_antismash_installationdirectory)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bgc_antismash_databases\"}},\"operation\":\"&&\",\"rightExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bgc_antismash_installationdirectory\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "968",
                "label": "(params.bgc_antismash_databases && params.bgc_antismash_installationdirectory)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "969",
                "label": "(params.bgc_antismash_databases && params.bgc_antismash_installationdirectory)",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "970",
                "label": "Channel.fromPath(params.bgc_antismash_databases)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"fromPath\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bgc_antismash_databases\"}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "971",
                "label": "first",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"first\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "972",
                "label": "Channel.fromPath(params.bgc_antismash_installationdirectory)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"fromPath\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bgc_antismash_installationdirectory\"}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "973",
                "label": "first",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"first\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "974",
                "label": "https://github.com/nf-core/test-datasets/raw/91bb8781c576967e23d2c5315dd4d43213575033/data/delete_me/antismash/css.tar.gz",
                "type": "Literal",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"value\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ConstantExpression\":\"https://github.com/nf-core/test-datasets/raw/91bb8781c576967e23d2c5315dd4d43213575033/data/delete_me/antismash/css.tar.gz\"}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "975",
                "label": "https://github.com/nf-core/test-datasets/raw/91bb8781c576967e23d2c5315dd4d43213575033/data/delete_me/antismash/detection.tar.gz",
                "type": "Literal",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"value\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ConstantExpression\":\"https://github.com/nf-core/test-datasets/raw/91bb8781c576967e23d2c5315dd4d43213575033/data/delete_me/antismash/detection.tar.gz\"}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "976",
                "label": "https://github.com/nf-core/test-datasets/raw/91bb8781c576967e23d2c5315dd4d43213575033/data/delete_me/antismash/modules.tar.gz",
                "type": "Literal",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"value\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ConstantExpression\":\"https://github.com/nf-core/test-datasets/raw/91bb8781c576967e23d2c5315dd4d43213575033/data/delete_me/antismash/modules.tar.gz\"}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "977",
                "label": "[[], ch_css_for_antismash]",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"ListExpression\":[{\"ListExpression\":[]},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "978",
                "label": "UNTAR_CSS",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"UNTAR_CSS\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"untar\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"UNTAR_CSS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"UNTAR_CSS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "untar",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/untar/main.nf",
                "unaliased": "UNTAR"
            }
        },
        {
            "content": {
                "id": "979",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "980",
                "label": "[[], ch_detection_for_antismash]",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"ListExpression\":[{\"ListExpression\":[]},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "981",
                "label": "UNTAR_DETECTION",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"UNTAR_DETECTION\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"untar\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"UNTAR_DETECTION\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"UNTAR_DETECTION\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "untar",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/untar/main.nf",
                "unaliased": "UNTAR"
            }
        },
        {
            "content": {
                "id": "982",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "983",
                "label": "[[], ch_modules_for_antismash]",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"ListExpression\":[{\"ListExpression\":[]},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "984",
                "label": "UNTAR_MODULES",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"UNTAR_MODULES\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"untar\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"UNTAR_MODULES\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"UNTAR_MODULES\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "untar",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/untar/main.nf",
                "unaliased": "UNTAR"
            }
        },
        {
            "content": {
                "id": "985",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "986",
                "label": "map",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"map\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}},\"labels\":[]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "987",
                "label": "map",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"map\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}},\"labels\":[]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "988",
                "label": "map",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"map\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}},\"labels\":[]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "989",
                "label": "ANTISMASH_ANTISMASHLITEDOWNLOADDATABASES",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"ANTISMASH_ANTISMASHLITEDOWNLOADDATABASES\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"database\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"ANTISMASH_ANTISMASHLITEDOWNLOADDATABASES\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"antismash_dir\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"ANTISMASH_ANTISMASHLITEDOWNLOADDATABASES\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"ANTISMASH_ANTISMASHLITEDOWNLOADDATABASES\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "database",
                    "antismash_dir",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/antismash/antismashlitedownloaddatabases/main.nf",
                "unaliased": "ANTISMASH_ANTISMASHLITEDOWNLOADDATABASES"
            }
        },
        {
            "content": {
                "id": "990",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "991",
                "label": "Merge ch_antismash_databases",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "992",
                "label": "Merge ch_antismash_directory",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "993",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "994",
                "label": "(params.annotation_tool == prodigal)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"annotation_tool\"}},\"operation\":\"==\",\"rightExpression\":{\"ConstantExpression\":\"prodigal\"}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "995",
                "label": "(params.annotation_tool == pyrodigal)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"annotation_tool\"}},\"operation\":\"==\",\"rightExpression\":{\"ConstantExpression\":\"pyrodigal\"}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "996",
                "label": "((params.annotation_tool == prodigal) || (params.annotation_tool == pyrodigal))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"binaryOp\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"ConstantExpression\":\"||\"}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "997",
                "label": "((params.annotation_tool == prodigal) || (params.annotation_tool == pyrodigal))",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "998",
                "label": "((params.annotation_tool == prodigal) || (params.annotation_tool == pyrodigal))",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "999",
                "label": "join",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"join\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"by\"},\"valueExpression\":{\"ConstantExpression\":0}}}]},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1000",
                "label": "filter",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"filter\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"IfStatement\":{\"booleanExpression\":{\"BooleanExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"meta\"},\"property\":\"longest_contig\"}},\"operation\":\"<\",\"rightExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bgc_antismash_sampleminlength\"}}}}},\"ifBlock\":{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"log\"},\"method\":\"warn\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"GStringExpression\":{\"verbatimText\":\"[nf-core/funcscan] Sample does not have any contig reaching min. length threshold of --bgc_antismash_sampleminlength $params.bgc_antismash_sampleminlength. Antismash will not be run for sample: $meta.id.\",\"strings\":[{\"ConstantExpression\":\"[nf-core/funcscan] Sample does not have any contig reaching min. length threshold of --bgc_antismash_sampleminlength \"},{\"ConstantExpression\":\". Antismash will not be run for sample: \"},{\"ConstantExpression\":\".\"}],\"values\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bgc_antismash_sampleminlength\"}},{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"meta\"},\"property\":\"id\"}}]}}]}}}},\"labels\":[]}},\"elseBlock\":{\"EmptyStatement\":null},\"labels\":[]}},{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"meta\"},\"property\":\"longest_contig\"}},\"operation\":\">=\",\"rightExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bgc_antismash_sampleminlength\"}}}},\"labels\":[]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[\"meta\",\"fna\",\"gff\"]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1001",
                "label": "multiMap",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"multiMap\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ExpressionStatement\":{\"expression\":{\"ListExpression\":[{\"VariableExpression\":\"meta\"},{\"VariableExpression\":\"fna\"}]},\"labels\":[\"fna\"]}},{\"ExpressionStatement\":{\"expression\":{\"ListExpression\":[{\"VariableExpression\":\"gff\"}]},\"labels\":[\"gff\"]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[\"meta\",\"fna\",\"gff\"]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"fna\"},\"operation\":\"=\",\"rightExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"res\"},\"property\":\"fna\"}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"gff\"},\"operation\":\"=\",\"rightExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"res\"},\"property\":\"gff\"}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "fna",
                    "gff"
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1002",
                "label": "ANTISMASH_ANTISMASHLITE",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"ANTISMASH_ANTISMASHLITE\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"clusterblast_file\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"ANTISMASH_ANTISMASHLITE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"html_accessory_files\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"ANTISMASH_ANTISMASHLITE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"knownclusterblast_html\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"ANTISMASH_ANTISMASHLITE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"knownclusterblast_dir\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"ANTISMASH_ANTISMASHLITE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"knownclusterblast_txt\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"ANTISMASH_ANTISMASHLITE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":4}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"svg_files_clusterblast\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"ANTISMASH_ANTISMASHLITE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":5}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"svg_files_knownclusterblast\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"ANTISMASH_ANTISMASHLITE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":6}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"gbk_input\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"ANTISMASH_ANTISMASHLITE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":7}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"json_results\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"ANTISMASH_ANTISMASHLITE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":8}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"log\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"ANTISMASH_ANTISMASHLITE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":9}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"zip\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"ANTISMASH_ANTISMASHLITE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":10}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"gbk_results\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"ANTISMASH_ANTISMASHLITE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":11}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"clusterblastoutput\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"ANTISMASH_ANTISMASHLITE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":12}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"html\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"ANTISMASH_ANTISMASHLITE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":13}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"knownclusterblastoutput\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"ANTISMASH_ANTISMASHLITE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":14}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"json_sideloading\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"ANTISMASH_ANTISMASHLITE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":15}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"ANTISMASH_ANTISMASHLITE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":16}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "clusterblast_file",
                    "html_accessory_files",
                    "knownclusterblast_html",
                    "knownclusterblast_dir",
                    "knownclusterblast_txt",
                    "svg_files_clusterblast",
                    "svg_files_knownclusterblast",
                    "gbk_input",
                    "json_results",
                    "log",
                    "zip",
                    "gbk_results",
                    "clusterblastoutput",
                    "html",
                    "knownclusterblastoutput",
                    "json_sideloading",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/antismash/antismashlite/main.nf",
                "unaliased": "ANTISMASH_ANTISMASHLITE"
            }
        },
        {
            "content": {
                "id": "1003",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1004",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1005",
                "label": "groupTuple",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"groupTuple\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1006",
                "label": "map",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"map\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ExpressionStatement\":{\"expression\":{\"ListExpression\":[{\"VariableExpression\":\"meta\"},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"files\"},\"method\":\"flatten\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]},\"labels\":[]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[\"meta\",\"files\"]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1007",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1008",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1009",
                "label": "Merge ch_bgcresults_for_combgc",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1010",
                "label": "params.bgc_skip_deepbgc",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bgc_skip_deepbgc\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1011",
                "label": "params.bgc_skip_deepbgc",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1012",
                "label": "params.bgc_skip_deepbgc",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1013",
                "label": "params.bgc_deepbgc_database",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bgc_deepbgc_database\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1014",
                "label": "params.bgc_deepbgc_database",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1015",
                "label": "Channel.fromPath(params.bgc_deepbgc_database)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"fromPath\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bgc_deepbgc_database\"}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1016",
                "label": "first",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"first\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1017",
                "label": "DEEPBGC_DOWNLOAD",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"DEEPBGC_DOWNLOAD\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"db\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"DEEPBGC_DOWNLOAD\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"DEEPBGC_DOWNLOAD\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "db",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/deepbgc/download/main.nf",
                "unaliased": "DEEPBGC_DOWNLOAD"
            }
        },
        {
            "content": {
                "id": "1018",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1019",
                "label": "Merge ch_deepbgc_database",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1020",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1021",
                "label": "DEEPBGC_PIPELINE",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"DEEPBGC_PIPELINE\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"readme\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"DEEPBGC_PIPELINE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"log\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"DEEPBGC_PIPELINE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"json\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"DEEPBGC_PIPELINE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"bgc_gbk\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"DEEPBGC_PIPELINE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"bgc_tsv\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"DEEPBGC_PIPELINE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":4}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"full_gbk\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"DEEPBGC_PIPELINE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":5}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"pfam_tsv\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"DEEPBGC_PIPELINE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":6}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"bgc_png\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"DEEPBGC_PIPELINE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":7}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"pr_png\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"DEEPBGC_PIPELINE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":8}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"roc_png\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"DEEPBGC_PIPELINE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":9}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"score_png\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"DEEPBGC_PIPELINE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":10}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"DEEPBGC_PIPELINE\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":11}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "readme",
                    "log",
                    "json",
                    "bgc_gbk",
                    "bgc_tsv",
                    "full_gbk",
                    "pfam_tsv",
                    "bgc_png",
                    "pr_png",
                    "roc_png",
                    "score_png",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/deepbgc/pipeline/main.nf",
                "unaliased": "DEEPBGC_PIPELINE"
            }
        },
        {
            "content": {
                "id": "1022",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1023",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1024",
                "label": "Merge ch_bgcresults_for_combgc",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1025",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1026",
                "label": "params.bgc_skip_gecco",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bgc_skip_gecco\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1027",
                "label": "params.bgc_skip_gecco",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1028",
                "label": "params.bgc_skip_gecco",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1029",
                "label": "groupTuple",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"groupTuple\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1030",
                "label": "multiMap",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"multiMap\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ExpressionStatement\":{\"expression\":{\"ListExpression\":[{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}},{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}},{\"ListExpression\":[]}]},\"labels\":[\"fna\"]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"fna\"},\"operation\":\"=\",\"rightExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"res\"},\"property\":\"fna\"}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "fna"
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1031",
                "label": "GECCO_RUN",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"GECCO_RUN\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"ListExpression\":[]}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"genes\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"GECCO_RUN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"features\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"GECCO_RUN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"clusters\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"GECCO_RUN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"gbk\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"GECCO_RUN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"json\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"GECCO_RUN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":4}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"GECCO_RUN\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":5}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "genes",
                    "features",
                    "clusters",
                    "gbk",
                    "json",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/gecco/run/main.nf",
                "unaliased": "GECCO_RUN"
            }
        },
        {
            "content": {
                "id": "1032",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1033",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1034",
                "label": "groupTuple",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"groupTuple\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1035",
                "label": "map",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"map\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ExpressionStatement\":{\"expression\":{\"ListExpression\":[{\"VariableExpression\":\"meta\"},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"files\"},\"method\":\"flatten\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]},\"labels\":[]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[\"meta\",\"files\"]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1036",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1037",
                "label": "Merge ch_bgcresults_for_combgc",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1038",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1039",
                "label": "params.bgc_skip_hmmsearch",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bgc_skip_hmmsearch\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1040",
                "label": "params.bgc_skip_hmmsearch",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1041",
                "label": "params.bgc_skip_hmmsearch",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1042",
                "label": "params.bgc_hmmsearch_models",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"NotExpression\":{\"NotExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bgc_hmmsearch_models\"}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1043",
                "label": "params.bgc_hmmsearch_models",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1044",
                "label": "Channel.fromPath([checkIfExists:true], params.bgc_hmmsearch_models)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"fromPath\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"checkIfExists\"},\"valueExpression\":{\"ConstantExpression\":true}}}]},{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bgc_hmmsearch_models\"}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1045",
                "label": "this.error([nf-core/funcscan] error: hmm model files not found for --bgc_hmmsearch_models! Please check input.)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"error\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ConstantExpression\":\"[nf-core/funcscan] error: hmm model files not found for --bgc_hmmsearch_models! Please check input.\"}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1046",
                "label": "map",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"map\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"meta\"},\"operation\":\"=\",\"rightExpression\":{\"MapExpression\":[]}}},\"labels\":[]}},{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"meta\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":\"id\"}}},\"operation\":\"=\",\"rightExpression\":{\"TernaryExpression\":{\"booleanExpression\":{\"BooleanExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"file\"},\"property\":\"extension\"}},\"operation\":\"==\",\"rightExpression\":{\"ConstantExpression\":\"gz\"}}}},\"trueExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"file\"},\"property\":\"name\"}},\"operation\":\"-\",\"rightExpression\":{\"ConstantExpression\":\".hmm.gz\"}}},\"falseExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"file\"},\"property\":\"name\"}},\"operation\":\"-\",\"rightExpression\":{\"ConstantExpression\":\".hmm\"}}}}}}},\"labels\":[]}},{\"ExpressionStatement\":{\"expression\":{\"ListExpression\":[{\"VariableExpression\":\"meta\"},{\"VariableExpression\":\"file\"}]},\"labels\":[]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[\"file\"]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1047",
                "label": "combine",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"combine\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1048",
                "label": "map",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"map\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"meta_new\"},\"operation\":\"=\",\"rightExpression\":{\"MapExpression\":[]}}},\"labels\":[]}},{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"meta_new\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":\"id\"}}},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"meta_faa\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":\"id\"}}}}},\"labels\":[]}},{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"meta_new\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":\"hmm_id\"}}},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"meta_hmm\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":\"id\"}}}}},\"labels\":[]}},{\"ExpressionStatement\":{\"expression\":{\"ListExpression\":[{\"VariableExpression\":\"meta_new\"},{\"VariableExpression\":\"hmm\"},{\"VariableExpression\":\"faa\"},{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bgc_hmmsearch_savealignments\"}},{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bgc_hmmsearch_savetargets\"}},{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"bgc_hmmsearch_savedomains\"}}]},\"labels\":[]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[\"meta_faa\",\"faa\",\"meta_hmm\",\"hmm\"]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1049",
                "label": "BGC_HMMER_HMMSEARCH",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"BGC_HMMER_HMMSEARCH\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"output\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BGC_HMMER_HMMSEARCH\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"alignments\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BGC_HMMER_HMMSEARCH\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"target_summary\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BGC_HMMER_HMMSEARCH\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"domain_summary\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BGC_HMMER_HMMSEARCH\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"BGC_HMMER_HMMSEARCH\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":4}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "output",
                    "alignments",
                    "target_summary",
                    "domain_summary",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/hmmer/hmmsearch/main.nf",
                "unaliased": "HMMER_HMMSEARCH"
            }
        },
        {
            "content": {
                "id": "1050",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1051",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1052",
                "label": "COMBGC",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"COMBGC\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"tsv\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"COMBGC\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"COMBGC\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "tsv",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/local/combgc.nf",
                "unaliased": "COMBGC"
            }
        },
        {
            "content": {
                "id": "1053",
                "label": "map",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"map\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}},\"labels\":[]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1054",
                "label": "collectFile",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collectFile\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"name\"},\"valueExpression\":{\"ConstantExpression\":\"combgc_complete_summary.tsv\"}}},{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"storeDir\"},\"valueExpression\":{\"GStringExpression\":{\"verbatimText\":\"$params.outdir/reports/combgc\",\"strings\":[{\"ConstantExpression\":\"\"},{\"ConstantExpression\":\"/reports/combgc\"}],\"values\":[{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"outdir\"}}]}}}},{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"keepHeader\"},\"valueExpression\":{\"ConstantExpression\":true}}}]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1055",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1056",
                "label": "Merge ch_versions",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1057",
                "label": "unique",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"unique\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1058",
                "label": "collectFile",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collectFile\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MapExpression\":[{\"MapEntryExpression\":{\"keyExpression\":{\"ConstantExpression\":\"name\"},\"valueExpression\":{\"ConstantExpression\":\"collated_versions.yml\"}}}]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1059",
                "label": "CUSTOM_DUMPSOFTWAREVERSIONS",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"CUSTOM_DUMPSOFTWAREVERSIONS\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"yml\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"CUSTOM_DUMPSOFTWAREVERSIONS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"mqc_yml\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"CUSTOM_DUMPSOFTWAREVERSIONS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"CUSTOM_DUMPSOFTWAREVERSIONS\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "yml",
                    "mqc_yml",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/custom/dumpsoftwareversions/main.nf",
                "unaliased": "CUSTOM_DUMPSOFTWAREVERSIONS"
            }
        },
        {
            "content": {
                "id": "1060",
                "label": "Channel.empty()",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"empty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1061",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1062",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1063",
                "label": "(params.annotation_tool == prokka)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"params\"},\"property\":\"annotation_tool\"}},\"operation\":\"==\",\"rightExpression\":{\"ConstantExpression\":\"prokka\"}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1064",
                "label": "(params.annotation_tool == prokka)",
                "type": "Generator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toBoolean\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1065",
                "label": "(params.annotation_tool == prokka)",
                "type": "Conditional",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"condition\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"condition\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1066",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"it\"},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}},\"labels\":[]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1067",
                "label": "ifEmpty",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"ifEmpty\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ListExpression\":[]}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1068",
                "label": "mix",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"mix\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1069",
                "label": "Merge ch_multiqc_files",
                "type": "Merge",
                "statement": null,
                "ret": null,
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1070",
                "label": "view",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"view\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ExpressionStatement\":{\"expression\":{\"GStringExpression\":{\"verbatimText\":\"<_^_> ch_multiqc_files: $it\",\"strings\":[{\"ConstantExpression\":\"<_^_> ch_multiqc_files: \"},{\"ConstantExpression\":\"\"}],\"values\":[{\"VariableExpression\":\"it\"}]}},\"labels\":[]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1071",
                "label": "view",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"view\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ExpressionStatement\":{\"expression\":{\"GStringExpression\":{\"verbatimText\":\"<_^_> ch_multiqc_config: $it\",\"strings\":[{\"ConstantExpression\":\"<_^_> ch_multiqc_config: \"},{\"ConstantExpression\":\"\"}],\"values\":[{\"VariableExpression\":\"it\"}]}},\"labels\":[]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1072",
                "label": "view",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"view\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ExpressionStatement\":{\"expression\":{\"GStringExpression\":{\"verbatimText\":\"<_^_> ch_multiqc_custom_config: $it\",\"strings\":[{\"ConstantExpression\":\"<_^_> ch_multiqc_custom_config: \"},{\"ConstantExpression\":\"\"}],\"values\":[{\"VariableExpression\":\"it\"}]}},\"labels\":[]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1073",
                "label": "view",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"view\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"ClosureExpression\":{\"code\":{\"BlockStatement\":{\"statements\":[{\"ExpressionStatement\":{\"expression\":{\"GStringExpression\":{\"verbatimText\":\"<_^_> ch_multiqc_logo: $it\",\"strings\":[{\"ConstantExpression\":\"<_^_> ch_multiqc_logo: \"},{\"ConstantExpression\":\"\"}],\"values\":[{\"VariableExpression\":\"it\"}]}},\"labels\":[]}}],\"scope\":{\"declaredVariables\":[],\"referencedClassVariables\":[]},\"labels\":[]}},\"parameters\":[]}}]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1074",
                "label": "collect",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"collect\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1075",
                "label": "toList",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toList\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1076",
                "label": "toList",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toList\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1077",
                "label": "toList",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toList\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        },
        {
            "content": {
                "id": "1078",
                "label": "MULTIQC",
                "type": "Process",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"this\"},\"method\":\"MULTIQC\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}]}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"report\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"MULTIQC\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":0}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"data\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"MULTIQC\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":1}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"plots\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"MULTIQC\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":2}}}}},\"labels\":[]}}",
                    "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"versions\"},\"operation\":\"=\",\"rightExpression\":{\"BinaryExpression\":{\"leftExpression\":{\"PropertyExpression\":{\"objectExpression\":{\"VariableExpression\":\"MULTIQC\"},\"property\":\"out\"}},\"operation\":\"[\",\"rightExpression\":{\"ConstantExpression\":3}}}}},\"labels\":[]}}"
                ],
                "outputNames": [
                    "report",
                    "data",
                    "plots",
                    "versions"
                ],
                "module": "/Users/ayush/Desktop/workflows/funcscan/modules/nf-core/multiqc/main.nf",
                "unaliased": "MULTIQC"
            }
        },
        {
            "content": {
                "id": "1079",
                "label": "toList",
                "type": "Operator",
                "statement": "{\"ExpressionStatement\":{\"expression\":{\"BinaryExpression\":{\"leftExpression\":{\"VariableExpression\":\"res\"},\"operation\":\"=\",\"rightExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"MethodCallExpression\":{\"objectExpression\":{\"VariableExpression\":\"Channel\"},\"method\":\"placeholder\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}},\"method\":\"toList\",\"arguments\":{\"ArgumentListExpression\":{\"expressions\":[]}}}}}},\"labels\":[]}}",
                "ret": [
                    "{\"ExpressionStatement\":{\"expression\":{\"VariableExpression\":\"res\"},\"labels\":[]}}"
                ],
                "outputNames": [
                    
                ],
                "module": "",
                "unaliased": ""
            }
        }
    ],
    "edges": [
        {
            "content": {
                "label": "",
                "src": "666",
                "dest": "667",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "667",
                "dest": "668",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "667",
                "dest": "669",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "668",
                "dest": "670",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "669",
                "dest": "670",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "671",
                "dest": "672",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "672",
                "dest": "673",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "672",
                "dest": "674",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "673",
                "dest": "675",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "674",
                "dest": "675",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "678",
                "dest": "679",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "679",
                "dest": "680",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "676",
                "dest": "681",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "680",
                "dest": "681",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "680",
                "dest": "682",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "679",
                "dest": "682",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "682",
                "dest": "683",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "681",
                "dest": "684",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "683",
                "dest": "684",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "682",
                "dest": "685",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "683",
                "dest": "685",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "685",
                "dest": "686",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "687",
                "dest": "688",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "689",
                "dest": "691",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "690",
                "dest": "691",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "691",
                "dest": "693",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "692",
                "dest": "693",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "693",
                "dest": "694",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "688",
                "dest": "695",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "694",
                "dest": "695",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "696",
                "dest": "698",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "697",
                "dest": "698",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "698",
                "dest": "699",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "695",
                "dest": "700",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "699",
                "dest": "700",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "700",
                "dest": "701",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "701",
                "dest": "702",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "702",
                "dest": "703",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "702",
                "dest": "704",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "703",
                "dest": "704",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "702",
                "dest": "705",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "704",
                "dest": "705",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "702",
                "dest": "706",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "705",
                "dest": "706",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "686",
                "dest": "706",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "702",
                "dest": "707",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "705",
                "dest": "707",
                "branch": true
            }
        },
        {
            "content": {
                "label": "2",
                "src": "706",
                "dest": "707",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "702",
                "dest": "708",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "705",
                "dest": "708",
                "branch": true
            }
        },
        {
            "content": {
                "label": "1",
                "src": "706",
                "dest": "708",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "702",
                "dest": "709",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "705",
                "dest": "709",
                "branch": true
            }
        },
        {
            "content": {
                "label": "0",
                "src": "706",
                "dest": "709",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "702",
                "dest": "710",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "705",
                "dest": "710",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "684",
                "dest": "710",
                "branch": null
            }
        },
        {
            "content": {
                "label": "4",
                "src": "706",
                "dest": "710",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "702",
                "dest": "711",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "705",
                "dest": "711",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "702",
                "dest": "712",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "705",
                "dest": "712",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "702",
                "dest": "713",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "705",
                "dest": "713",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "712",
                "dest": "713",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "702",
                "dest": "714",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "705",
                "dest": "714",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "713",
                "dest": "714",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "702",
                "dest": "715",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "705",
                "dest": "715",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "714",
                "dest": "715",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "686",
                "dest": "715",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "702",
                "dest": "716",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "705",
                "dest": "716",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "714",
                "dest": "716",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "710",
                "dest": "716",
                "branch": null
            }
        },
        {
            "content": {
                "label": "4",
                "src": "715",
                "dest": "716",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "702",
                "dest": "717",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "705",
                "dest": "717",
                "branch": true
            }
        },
        {
            "content": {
                "label": "0",
                "src": "715",
                "dest": "717",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "711",
                "dest": "717",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "702",
                "dest": "718",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "705",
                "dest": "718",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "716",
                "dest": "718",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "710",
                "dest": "718",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "702",
                "dest": "719",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "718",
                "dest": "719",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "684",
                "dest": "719",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "702",
                "dest": "720",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "702",
                "dest": "721",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "702",
                "dest": "722",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "702",
                "dest": "723",
                "branch": false
            }
        },
        {
            "content": {
                "label": "0",
                "src": "707",
                "dest": "724",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "720",
                "dest": "724",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "709",
                "dest": "725",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "722",
                "dest": "725",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "708",
                "dest": "726",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "721",
                "dest": "726",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "717",
                "dest": "727",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "723",
                "dest": "727",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "719",
                "dest": "728",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "684",
                "dest": "728",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "729",
                "dest": "730",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "731",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "724",
                "dest": "731",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "732",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "733",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "734",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "735",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "736",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "737",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "738",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "739",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "740",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "741",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "742",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "743",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "744",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "745",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "746",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "747",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "748",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "749",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "750",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "751",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "752",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "753",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "754",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "755",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "756",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "757",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "758",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "759",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "760",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "761",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "762",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "763",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "764",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "765",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "766",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "767",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "768",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "769",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "770",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "771",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "772",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "773",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "774",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "775",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "776",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "777",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "778",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "779",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "780",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "781",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "782",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "783",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "784",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "785",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "786",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "787",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "788",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "789",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "790",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "791",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "792",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "793",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "794",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "795",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "736",
                "dest": "737",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "737",
                "dest": "738",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "738",
                "dest": "739",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "731",
                "dest": "739",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "738",
                "dest": "740",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "732",
                "dest": "740",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "739",
                "dest": "740",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "738",
                "dest": "741",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "733",
                "dest": "741",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "739",
                "dest": "741",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "741",
                "dest": "742",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "733",
                "dest": "742",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "740",
                "dest": "743",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "732",
                "dest": "743",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "744",
                "dest": "745",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "745",
                "dest": "746",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "746",
                "dest": "747",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "686",
                "dest": "747",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "746",
                "dest": "748",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "743",
                "dest": "748",
                "branch": null
            }
        },
        {
            "content": {
                "label": "5",
                "src": "747",
                "dest": "748",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "746",
                "dest": "749",
                "branch": true
            }
        },
        {
            "content": {
                "label": "2",
                "src": "747",
                "dest": "749",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "746",
                "dest": "750",
                "branch": true
            }
        },
        {
            "content": {
                "label": "1",
                "src": "747",
                "dest": "750",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "746",
                "dest": "751",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "748",
                "dest": "751",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "749",
                "dest": "751",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "746",
                "dest": "752",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "751",
                "dest": "752",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "750",
                "dest": "752",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "746",
                "dest": "753",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "742",
                "dest": "753",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "749",
                "dest": "753",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "746",
                "dest": "754",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "735",
                "dest": "754",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "750",
                "dest": "754",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "746",
                "dest": "755",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "731",
                "dest": "755",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "754",
                "dest": "755",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "754",
                "dest": "756",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "735",
                "dest": "756",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "753",
                "dest": "757",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "742",
                "dest": "757",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "755",
                "dest": "758",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "731",
                "dest": "758",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "752",
                "dest": "759",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "743",
                "dest": "759",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "760",
                "dest": "761",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "761",
                "dest": "762",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "762",
                "dest": "763",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "731",
                "dest": "763",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "762",
                "dest": "764",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "759",
                "dest": "764",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "763",
                "dest": "764",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "762",
                "dest": "765",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "757",
                "dest": "765",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "763",
                "dest": "765",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "765",
                "dest": "766",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "757",
                "dest": "766",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "764",
                "dest": "767",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "759",
                "dest": "767",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "768",
                "dest": "769",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "769",
                "dest": "770",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "770",
                "dest": "771",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "770",
                "dest": "772",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "771",
                "dest": "772",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "770",
                "dest": "773",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "772",
                "dest": "773",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "770",
                "dest": "774",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "772",
                "dest": "774",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "770",
                "dest": "775",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "773",
                "dest": "775",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "770",
                "dest": "776",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "731",
                "dest": "776",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "775",
                "dest": "776",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "770",
                "dest": "777",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "776",
                "dest": "777",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "770",
                "dest": "778",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "777",
                "dest": "778",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "770",
                "dest": "779",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "767",
                "dest": "779",
                "branch": null
            }
        },
        {
            "content": {
                "label": "4",
                "src": "778",
                "dest": "779",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "779",
                "dest": "780",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "767",
                "dest": "780",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "766",
                "dest": "781",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "781",
                "dest": "782",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "758",
                "dest": "782",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "782",
                "dest": "783",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "784",
                "dest": "785",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "785",
                "dest": "786",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "785",
                "dest": "787",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "786",
                "dest": "788",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "787",
                "dest": "788",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "783",
                "dest": "789",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "783",
                "dest": "789",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "788",
                "dest": "789",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "734",
                "dest": "790",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "789",
                "dest": "790",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "790",
                "dest": "791",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "791",
                "dest": "793",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "792",
                "dest": "794",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "793",
                "dest": "794",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "794",
                "dest": "795",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "730",
                "dest": "796",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "728",
                "dest": "796",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "780",
                "dest": "796",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "796",
                "dest": "797",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "728",
                "dest": "797",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "798",
                "dest": "799",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "800",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "801",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "800",
                "dest": "801",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "802",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "802",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "803",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "803",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "804",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "804",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "805",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "805",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "806",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "806",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "807",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "807",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "808",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "808",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "809",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "809",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "810",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "810",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "811",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "811",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "812",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "812",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "813",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "813",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "814",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "814",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "815",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "815",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "816",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "816",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "817",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "817",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "818",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "818",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "819",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "819",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "820",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "820",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "821",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "821",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "822",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "822",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "823",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "823",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "824",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "824",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "825",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "825",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "826",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "826",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "827",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "827",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "828",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "828",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "829",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "829",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "830",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "830",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "831",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "831",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "832",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "832",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "833",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "833",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "834",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "834",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "835",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "835",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "836",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "836",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "837",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "837",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "838",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "838",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "839",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "839",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "840",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "840",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "841",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "841",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "842",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "842",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "843",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "843",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "844",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "844",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "845",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "845",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "846",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "846",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "847",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "847",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "848",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "848",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "849",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "849",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "850",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "850",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "851",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "851",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "852",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "852",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "853",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "853",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "854",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "854",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "855",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "855",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "856",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "856",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "857",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "857",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "858",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "858",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "859",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "859",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "860",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "860",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "861",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "861",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "862",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "862",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "863",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "863",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "864",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "864",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "865",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "865",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "866",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "866",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "867",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "867",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "868",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "868",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "869",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "869",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "870",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "870",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "871",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "871",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "872",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "872",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "873",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "873",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "874",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "874",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "875",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "875",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "876",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "876",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "877",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "801",
                "dest": "877",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "805",
                "dest": "806",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "806",
                "dest": "807",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "807",
                "dest": "808",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "808",
                "dest": "809",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "808",
                "dest": "810",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "809",
                "dest": "810",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "811",
                "dest": "812",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "812",
                "dest": "813",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "813",
                "dest": "814",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "686",
                "dest": "814",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "810",
                "dest": "814",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "813",
                "dest": "815",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "803",
                "dest": "815",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "814",
                "dest": "815",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "813",
                "dest": "816",
                "branch": true
            }
        },
        {
            "content": {
                "label": "0",
                "src": "814",
                "dest": "816",
                "branch": null
            }
        },
        {
            "content": {
                "label": "3",
                "src": "814",
                "dest": "816",
                "branch": null
            }
        },
        {
            "content": {
                "label": "4",
                "src": "814",
                "dest": "816",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "813",
                "dest": "817",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "815",
                "dest": "817",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "816",
                "dest": "817",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "813",
                "dest": "818",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "804",
                "dest": "818",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "816",
                "dest": "818",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "818",
                "dest": "819",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "804",
                "dest": "819",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "817",
                "dest": "820",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "803",
                "dest": "820",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "821",
                "dest": "822",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "822",
                "dest": "823",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "823",
                "dest": "824",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "823",
                "dest": "825",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "686",
                "dest": "825",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "824",
                "dest": "825",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "823",
                "dest": "826",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "825",
                "dest": "826",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "823",
                "dest": "827",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "826",
                "dest": "827",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "823",
                "dest": "828",
                "branch": true
            }
        },
        {
            "content": {
                "label": "0",
                "src": "827",
                "dest": "828",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "827",
                "dest": "828",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "823",
                "dest": "829",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "820",
                "dest": "829",
                "branch": null
            }
        },
        {
            "content": {
                "label": "14",
                "src": "828",
                "dest": "829",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "823",
                "dest": "830",
                "branch": true
            }
        },
        {
            "content": {
                "label": "2",
                "src": "828",
                "dest": "830",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "823",
                "dest": "831",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "830",
                "dest": "831",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "823",
                "dest": "832",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "829",
                "dest": "832",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "831",
                "dest": "832",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "823",
                "dest": "833",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "819",
                "dest": "833",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "831",
                "dest": "833",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "833",
                "dest": "834",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "819",
                "dest": "834",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "832",
                "dest": "835",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "820",
                "dest": "835",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "836",
                "dest": "837",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "837",
                "dest": "838",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "838",
                "dest": "839",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "686",
                "dest": "839",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "838",
                "dest": "840",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "835",
                "dest": "840",
                "branch": null
            }
        },
        {
            "content": {
                "label": "5",
                "src": "839",
                "dest": "840",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "838",
                "dest": "841",
                "branch": true
            }
        },
        {
            "content": {
                "label": "1",
                "src": "839",
                "dest": "841",
                "branch": null
            }
        },
        {
            "content": {
                "label": "3",
                "src": "839",
                "dest": "841",
                "branch": null
            }
        },
        {
            "content": {
                "label": "4",
                "src": "839",
                "dest": "841",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "838",
                "dest": "842",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "840",
                "dest": "842",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "841",
                "dest": "842",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "838",
                "dest": "843",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "834",
                "dest": "843",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "841",
                "dest": "843",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "843",
                "dest": "844",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "834",
                "dest": "844",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "842",
                "dest": "845",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "835",
                "dest": "845",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "846",
                "dest": "847",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "847",
                "dest": "848",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "848",
                "dest": "849",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "849",
                "dest": "850",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "849",
                "dest": "851",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "850",
                "dest": "851",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "852",
                "dest": "853",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "853",
                "dest": "854",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "854",
                "dest": "855",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "802",
                "dest": "855",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "854",
                "dest": "856",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "855",
                "dest": "856",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "851",
                "dest": "856",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "854",
                "dest": "857",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "845",
                "dest": "857",
                "branch": null
            }
        },
        {
            "content": {
                "label": "4",
                "src": "856",
                "dest": "857",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "854",
                "dest": "858",
                "branch": true
            }
        },
        {
            "content": {
                "label": "2",
                "src": "856",
                "dest": "858",
                "branch": null
            }
        },
        {
            "content": {
                "label": "3",
                "src": "856",
                "dest": "858",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "854",
                "dest": "859",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "858",
                "dest": "859",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "854",
                "dest": "860",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "857",
                "dest": "860",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "859",
                "dest": "860",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "854",
                "dest": "861",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "844",
                "dest": "861",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "859",
                "dest": "861",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "861",
                "dest": "862",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "844",
                "dest": "862",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "860",
                "dest": "863",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "845",
                "dest": "863",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "864",
                "dest": "865",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "865",
                "dest": "866",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "866",
                "dest": "867",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "686",
                "dest": "867",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "866",
                "dest": "868",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "863",
                "dest": "868",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "867",
                "dest": "868",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "866",
                "dest": "869",
                "branch": true
            }
        },
        {
            "content": {
                "label": "0",
                "src": "867",
                "dest": "869",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "866",
                "dest": "870",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "868",
                "dest": "870",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "869",
                "dest": "870",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "866",
                "dest": "871",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "862",
                "dest": "871",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "869",
                "dest": "871",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "871",
                "dest": "872",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "862",
                "dest": "872",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "870",
                "dest": "873",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "863",
                "dest": "873",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "872",
                "dest": "874",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "874",
                "dest": "875",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "875",
                "dest": "876",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "873",
                "dest": "877",
                "branch": null
            }
        },
        {
            "content": {
                "label": "3",
                "src": "876",
                "dest": "877",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "878",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "878",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "724",
                "dest": "878",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "879",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "879",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "880",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "880",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "881",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "881",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "882",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "882",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "883",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "883",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "884",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "884",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "885",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "885",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "886",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "886",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "887",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "887",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "888",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "888",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "889",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "889",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "890",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "890",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "891",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "891",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "892",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "892",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "893",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "893",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "894",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "894",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "895",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "895",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "896",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "896",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "897",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "897",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "898",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "898",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "899",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "899",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "900",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "900",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "901",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "901",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "902",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "902",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "903",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "903",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "904",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "904",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "905",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "905",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "906",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "906",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "907",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "907",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "908",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "908",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "909",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "909",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "910",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "910",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "911",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "911",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "912",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "912",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "913",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "913",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "914",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "914",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "915",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "915",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "916",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "916",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "917",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "917",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "918",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "918",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "919",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "919",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "920",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "920",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "921",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "921",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "922",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "922",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "923",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "923",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "924",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "924",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "925",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "925",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "926",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "926",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "927",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "927",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "928",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "928",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "929",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "929",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "930",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "930",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "931",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "931",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "932",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "932",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "933",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "933",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "934",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "934",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "935",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "935",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "936",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "936",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "937",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "937",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "938",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "938",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "939",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "939",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "940",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "940",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "941",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "941",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "942",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "942",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "943",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "943",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "944",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "944",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "945",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "945",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "946",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "946",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "947",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "947",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "948",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "948",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "949",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "949",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "950",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "950",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "951",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "951",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "952",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "952",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "953",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false",
                "src": "801",
                "dest": "953",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "881",
                "dest": "882",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "882",
                "dest": "883",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "883",
                "dest": "884",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "884",
                "dest": "885",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "884",
                "dest": "886",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "885",
                "dest": "886",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "887",
                "dest": "888",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "888",
                "dest": "889",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "889",
                "dest": "890",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "686",
                "dest": "890",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "886",
                "dest": "890",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "889",
                "dest": "891",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "879",
                "dest": "891",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "890",
                "dest": "891",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "889",
                "dest": "892",
                "branch": true
            }
        },
        {
            "content": {
                "label": "0",
                "src": "890",
                "dest": "892",
                "branch": null
            }
        },
        {
            "content": {
                "label": "3",
                "src": "890",
                "dest": "892",
                "branch": null
            }
        },
        {
            "content": {
                "label": "4",
                "src": "890",
                "dest": "892",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "889",
                "dest": "893",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "891",
                "dest": "893",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "892",
                "dest": "893",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "889",
                "dest": "894",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "880",
                "dest": "894",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "892",
                "dest": "894",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "894",
                "dest": "895",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "880",
                "dest": "895",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "893",
                "dest": "896",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "879",
                "dest": "896",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "897",
                "dest": "898",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "898",
                "dest": "899",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "899",
                "dest": "900",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "899",
                "dest": "901",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "686",
                "dest": "901",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "900",
                "dest": "901",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "899",
                "dest": "902",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "901",
                "dest": "902",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "899",
                "dest": "903",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "902",
                "dest": "903",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "899",
                "dest": "904",
                "branch": true
            }
        },
        {
            "content": {
                "label": "0",
                "src": "903",
                "dest": "904",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "903",
                "dest": "904",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "899",
                "dest": "905",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "896",
                "dest": "905",
                "branch": null
            }
        },
        {
            "content": {
                "label": "14",
                "src": "904",
                "dest": "905",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "899",
                "dest": "906",
                "branch": true
            }
        },
        {
            "content": {
                "label": "2",
                "src": "904",
                "dest": "906",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "899",
                "dest": "907",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "906",
                "dest": "907",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "899",
                "dest": "908",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "905",
                "dest": "908",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "907",
                "dest": "908",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "899",
                "dest": "909",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "895",
                "dest": "909",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "907",
                "dest": "909",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "909",
                "dest": "910",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "895",
                "dest": "910",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "908",
                "dest": "911",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "896",
                "dest": "911",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "912",
                "dest": "913",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "913",
                "dest": "914",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "914",
                "dest": "915",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "686",
                "dest": "915",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "914",
                "dest": "916",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "911",
                "dest": "916",
                "branch": null
            }
        },
        {
            "content": {
                "label": "5",
                "src": "915",
                "dest": "916",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "914",
                "dest": "917",
                "branch": true
            }
        },
        {
            "content": {
                "label": "1",
                "src": "915",
                "dest": "917",
                "branch": null
            }
        },
        {
            "content": {
                "label": "3",
                "src": "915",
                "dest": "917",
                "branch": null
            }
        },
        {
            "content": {
                "label": "4",
                "src": "915",
                "dest": "917",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "914",
                "dest": "918",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "916",
                "dest": "918",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "917",
                "dest": "918",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "914",
                "dest": "919",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "910",
                "dest": "919",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "917",
                "dest": "919",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "919",
                "dest": "920",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "910",
                "dest": "920",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "918",
                "dest": "921",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "911",
                "dest": "921",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "922",
                "dest": "923",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "923",
                "dest": "924",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "924",
                "dest": "925",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "925",
                "dest": "926",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "925",
                "dest": "927",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "926",
                "dest": "927",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "928",
                "dest": "929",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "929",
                "dest": "930",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "930",
                "dest": "931",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "878",
                "dest": "931",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "930",
                "dest": "932",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "931",
                "dest": "932",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "927",
                "dest": "932",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "930",
                "dest": "933",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "921",
                "dest": "933",
                "branch": null
            }
        },
        {
            "content": {
                "label": "4",
                "src": "932",
                "dest": "933",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "930",
                "dest": "934",
                "branch": true
            }
        },
        {
            "content": {
                "label": "2",
                "src": "932",
                "dest": "934",
                "branch": null
            }
        },
        {
            "content": {
                "label": "3",
                "src": "932",
                "dest": "934",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "930",
                "dest": "935",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "934",
                "dest": "935",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "930",
                "dest": "936",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "933",
                "dest": "936",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "935",
                "dest": "936",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "930",
                "dest": "937",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "920",
                "dest": "937",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "935",
                "dest": "937",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "937",
                "dest": "938",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "920",
                "dest": "938",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "936",
                "dest": "939",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "921",
                "dest": "939",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "940",
                "dest": "941",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "941",
                "dest": "942",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "942",
                "dest": "943",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "686",
                "dest": "943",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "942",
                "dest": "944",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "939",
                "dest": "944",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "943",
                "dest": "944",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "942",
                "dest": "945",
                "branch": true
            }
        },
        {
            "content": {
                "label": "0",
                "src": "943",
                "dest": "945",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "942",
                "dest": "946",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "944",
                "dest": "946",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "945",
                "dest": "946",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "942",
                "dest": "947",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "938",
                "dest": "947",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "945",
                "dest": "947",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "947",
                "dest": "948",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "938",
                "dest": "948",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "946",
                "dest": "949",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "939",
                "dest": "949",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "948",
                "dest": "950",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "950",
                "dest": "951",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "951",
                "dest": "952",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "949",
                "dest": "953",
                "branch": null
            }
        },
        {
            "content": {
                "label": "3",
                "src": "952",
                "dest": "953",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "954",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "877",
                "dest": "954",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "953",
                "dest": "954",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "799",
                "dest": "955",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "797",
                "dest": "955",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "954",
                "dest": "955",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "955",
                "dest": "956",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "797",
                "dest": "956",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "957",
                "dest": "958",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "959",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "725",
                "dest": "959",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "960",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "724",
                "dest": "960",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "961",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "727",
                "dest": "961",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "962",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "963",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "964",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "965",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "966",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "967",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "968",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "969",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "970",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "971",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "972",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "973",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "974",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "975",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "976",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "977",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "978",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "979",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "980",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "981",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "982",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "983",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "984",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "985",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "986",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "987",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "988",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "989",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "990",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "991",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "992",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "993",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "994",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "995",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "996",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "997",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "998",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "999",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1000",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1001",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1002",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1003",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1004",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1005",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1006",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1007",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1008",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1009",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1010",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1011",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1012",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1013",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1014",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1015",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1016",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1017",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1018",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1019",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1020",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1021",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1022",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1023",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1024",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1025",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1026",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1027",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1028",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1029",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1030",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1031",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1032",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1033",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1034",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1035",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1036",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1037",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1038",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1039",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1040",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1041",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1042",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1043",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1044",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1045",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1046",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1047",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1048",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1049",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1050",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1051",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1052",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1053",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1054",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "964",
                "dest": "965",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "965",
                "dest": "966",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "966",
                "dest": "967",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "966",
                "dest": "968",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "967",
                "dest": "968",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "966",
                "dest": "969",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "968",
                "dest": "969",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "966",
                "dest": "970",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "969",
                "dest": "970",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "966",
                "dest": "971",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "969",
                "dest": "971",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "970",
                "dest": "971",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "966",
                "dest": "972",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "969",
                "dest": "972",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "966",
                "dest": "973",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "969",
                "dest": "973",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "972",
                "dest": "973",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "966",
                "dest": "974",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "969",
                "dest": "974",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "966",
                "dest": "975",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "969",
                "dest": "975",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "966",
                "dest": "976",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "969",
                "dest": "976",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "966",
                "dest": "977",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "969",
                "dest": "977",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "974",
                "dest": "977",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "966",
                "dest": "978",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "969",
                "dest": "978",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "977",
                "dest": "978",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "966",
                "dest": "979",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "969",
                "dest": "979",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "962",
                "dest": "979",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "978",
                "dest": "979",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "966",
                "dest": "980",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "969",
                "dest": "980",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "975",
                "dest": "980",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "966",
                "dest": "981",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "969",
                "dest": "981",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "980",
                "dest": "981",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "966",
                "dest": "982",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "969",
                "dest": "982",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "979",
                "dest": "982",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "981",
                "dest": "982",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "966",
                "dest": "983",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "969",
                "dest": "983",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "976",
                "dest": "983",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "966",
                "dest": "984",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "969",
                "dest": "984",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "983",
                "dest": "984",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "966",
                "dest": "985",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "969",
                "dest": "985",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "982",
                "dest": "985",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "984",
                "dest": "985",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "966",
                "dest": "986",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "969",
                "dest": "986",
                "branch": false
            }
        },
        {
            "content": {
                "label": "0",
                "src": "978",
                "dest": "986",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "966",
                "dest": "987",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "969",
                "dest": "987",
                "branch": false
            }
        },
        {
            "content": {
                "label": "0",
                "src": "981",
                "dest": "987",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "966",
                "dest": "988",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "969",
                "dest": "988",
                "branch": false
            }
        },
        {
            "content": {
                "label": "0",
                "src": "984",
                "dest": "988",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "966",
                "dest": "989",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "969",
                "dest": "989",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "986",
                "dest": "989",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "987",
                "dest": "989",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "988",
                "dest": "989",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "966",
                "dest": "990",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "969",
                "dest": "990",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "985",
                "dest": "990",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "989",
                "dest": "990",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "966",
                "dest": "991",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "971",
                "dest": "991",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "989",
                "dest": "991",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "966",
                "dest": "992",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "973",
                "dest": "992",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "989",
                "dest": "992",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "966",
                "dest": "993",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "962",
                "dest": "993",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "990",
                "dest": "993",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "966",
                "dest": "994",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "966",
                "dest": "995",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "966",
                "dest": "996",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "994",
                "dest": "996",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "995",
                "dest": "996",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "966",
                "dest": "997",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "996",
                "dest": "997",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "966",
                "dest": "998",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "997",
                "dest": "998",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "966",
                "dest": "999",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "998",
                "dest": "999",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "686",
                "dest": "999",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "959",
                "dest": "999",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "966",
                "dest": "1000",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "998",
                "dest": "1000",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "999",
                "dest": "1000",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "966",
                "dest": "1001",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "998",
                "dest": "1001",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "1000",
                "dest": "1001",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "966",
                "dest": "1002",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "998",
                "dest": "1002",
                "branch": true
            }
        },
        {
            "content": {
                "label": "0",
                "src": "1001",
                "dest": "1002",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "991",
                "dest": "1002",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "992",
                "dest": "1002",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "1001",
                "dest": "1002",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "966",
                "dest": "1003",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "993",
                "dest": "1003",
                "branch": null
            }
        },
        {
            "content": {
                "label": "16",
                "src": "1002",
                "dest": "1003",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "966",
                "dest": "1004",
                "branch": true
            }
        },
        {
            "content": {
                "label": "3",
                "src": "1002",
                "dest": "1004",
                "branch": null
            }
        },
        {
            "content": {
                "label": "7",
                "src": "1002",
                "dest": "1004",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "966",
                "dest": "1005",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "1004",
                "dest": "1005",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "966",
                "dest": "1006",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "1005",
                "dest": "1006",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "966",
                "dest": "1007",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "963",
                "dest": "1007",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1006",
                "dest": "1007",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1003",
                "dest": "1008",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "962",
                "dest": "1008",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1007",
                "dest": "1009",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "963",
                "dest": "1009",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1010",
                "dest": "1011",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1011",
                "dest": "1012",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "1012",
                "dest": "1013",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "1012",
                "dest": "1014",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "1013",
                "dest": "1014",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "1012",
                "dest": "1015",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "1014",
                "dest": "1015",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "1012",
                "dest": "1016",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "1014",
                "dest": "1016",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "1015",
                "dest": "1016",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "1012",
                "dest": "1017",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "1014",
                "dest": "1017",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "1012",
                "dest": "1018",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "1014",
                "dest": "1018",
                "branch": false
            }
        },
        {
            "content": {
                "label": "",
                "src": "1008",
                "dest": "1018",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "1017",
                "dest": "1018",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "1012",
                "dest": "1019",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "1016",
                "dest": "1019",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "1017",
                "dest": "1019",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "1012",
                "dest": "1020",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "1008",
                "dest": "1020",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1018",
                "dest": "1020",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "1012",
                "dest": "1021",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "686",
                "dest": "1021",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1019",
                "dest": "1021",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "1012",
                "dest": "1022",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "1020",
                "dest": "1022",
                "branch": null
            }
        },
        {
            "content": {
                "label": "11",
                "src": "1021",
                "dest": "1022",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "1012",
                "dest": "1023",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "1009",
                "dest": "1023",
                "branch": null
            }
        },
        {
            "content": {
                "label": "4",
                "src": "1021",
                "dest": "1023",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1023",
                "dest": "1024",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1009",
                "dest": "1024",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1022",
                "dest": "1025",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1008",
                "dest": "1025",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1026",
                "dest": "1027",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1027",
                "dest": "1028",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "1028",
                "dest": "1029",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "686",
                "dest": "1029",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "1028",
                "dest": "1030",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "1029",
                "dest": "1030",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "1028",
                "dest": "1031",
                "branch": true
            }
        },
        {
            "content": {
                "label": "0",
                "src": "1030",
                "dest": "1031",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "1028",
                "dest": "1032",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "1025",
                "dest": "1032",
                "branch": null
            }
        },
        {
            "content": {
                "label": "5",
                "src": "1031",
                "dest": "1032",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "1028",
                "dest": "1033",
                "branch": true
            }
        },
        {
            "content": {
                "label": "3",
                "src": "1031",
                "dest": "1033",
                "branch": null
            }
        },
        {
            "content": {
                "label": "2",
                "src": "1031",
                "dest": "1033",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "1028",
                "dest": "1034",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "1033",
                "dest": "1034",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "1028",
                "dest": "1035",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "1034",
                "dest": "1035",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "1028",
                "dest": "1036",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "1024",
                "dest": "1036",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1035",
                "dest": "1036",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1036",
                "dest": "1037",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1024",
                "dest": "1037",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1032",
                "dest": "1038",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1025",
                "dest": "1038",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1039",
                "dest": "1040",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1040",
                "dest": "1041",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "1041",
                "dest": "1042",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "1041",
                "dest": "1043",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "1042",
                "dest": "1043",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "1041",
                "dest": "1044",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "1043",
                "dest": "1044",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "1041",
                "dest": "1045",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: false - Branch: false - Branch: false",
                "src": "1043",
                "dest": "1045",
                "branch": false
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "1041",
                "dest": "1046",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "1044",
                "dest": "1046",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "1041",
                "dest": "1047",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "960",
                "dest": "1047",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1046",
                "dest": "1047",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "1041",
                "dest": "1048",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "1047",
                "dest": "1048",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "1041",
                "dest": "1049",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "1048",
                "dest": "1049",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true - Branch: true",
                "src": "1041",
                "dest": "1050",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "1038",
                "dest": "1050",
                "branch": null
            }
        },
        {
            "content": {
                "label": "4",
                "src": "1049",
                "dest": "1050",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1050",
                "dest": "1051",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1038",
                "dest": "1051",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1037",
                "dest": "1052",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "1052",
                "dest": "1053",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1053",
                "dest": "1054",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "958",
                "dest": "1055",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "956",
                "dest": "1055",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1051",
                "dest": "1055",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1055",
                "dest": "1056",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "956",
                "dest": "1056",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1056",
                "dest": "1057",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1057",
                "dest": "1058",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1058",
                "dest": "1059",
                "branch": null
            }
        },
        {
            "content": {
                "label": "1",
                "src": "1059",
                "dest": "1061",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1060",
                "dest": "1062",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1061",
                "dest": "1062",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1063",
                "dest": "1064",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1064",
                "dest": "1065",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "1065",
                "dest": "1066",
                "branch": true
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "1065",
                "dest": "1067",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "1066",
                "dest": "1067",
                "branch": null
            }
        },
        {
            "content": {
                "label": "Conditional: Conditional: (condition = Channel.placeholder()) - Branch: true - Branch: true",
                "src": "1065",
                "dest": "1068",
                "branch": true
            }
        },
        {
            "content": {
                "label": "",
                "src": "1062",
                "dest": "1068",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1067",
                "dest": "1068",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1068",
                "dest": "1069",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1062",
                "dest": "1069",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1069",
                "dest": "1070",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "665",
                "dest": "1071",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "670",
                "dest": "1072",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "677",
                "dest": "1073",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1069",
                "dest": "1074",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "665",
                "dest": "1075",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "670",
                "dest": "1076",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "677",
                "dest": "1077",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1074",
                "dest": "1078",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1075",
                "dest": "1078",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1076",
                "dest": "1078",
                "branch": null
            }
        },
        {
            "content": {
                "label": "",
                "src": "1077",
                "dest": "1078",
                "branch": null
            }
        },
        {
            "content": {
                "label": "0",
                "src": "1078",
                "dest": "1079",
                "branch": null
            }
        }
    ]
}